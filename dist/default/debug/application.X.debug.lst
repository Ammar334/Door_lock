

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Thu Aug 17 12:46:28 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    25                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    27   000000                     
    28                           ; Generated 23/03/2023 GMT
    29                           ; 
    30                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution. Publication is not required when
    44                           ;        this file is used in an embedded application.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC18F4620 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62   000000                     
    63                           	psect	idataCOMRAM
    64   001704                     __pidataCOMRAM:
    65                           	callstack 0
    66                           
    67                           ;initializer for _lat_registers
    68   001704  89                 	db	137
    69   001705  0F                 	db	15
    70   001706  8A                 	db	138
    71   001707  0F                 	db	15
    72   001708  8B                 	db	139
    73   001709  0F                 	db	15
    74   00170A  8C                 	db	140
    75   00170B  0F                 	db	15
    76   00170C  8D                 	db	141
    77   00170D  0F                 	db	15
    78                           
    79                           ;initializer for _port_registers
    80   00170E  80                 	db	128
    81   00170F  0F                 	db	15
    82   001710  81                 	db	129
    83   001711  0F                 	db	15
    84   001712  82                 	db	130
    85   001713  0F                 	db	15
    86   001714  83                 	db	131
    87   001715  0F                 	db	15
    88   001716  84                 	db	132
    89   001717  0F                 	db	15
    90                           
    91                           ;initializer for _tris_registers
    92   001718  92                 	db	146
    93   001719  0F                 	db	15
    94   00171A  93                 	db	147
    95   00171B  0F                 	db	15
    96   00171C  94                 	db	148
    97   00171D  0F                 	db	15
    98   00171E  95                 	db	149
    99   00171F  0F                 	db	15
   100   001720  96                 	db	150
   101   001721  0F                 	db	15
   102                           
   103                           ;initializer for _kp1
   104   001722  02                 	db	2
   105   001723  0A                 	db	10
   106   001724  12                 	db	18
   107   001725  1A                 	db	26
   108   001726  62                 	db	98
   109   001727  6A                 	db	106
   110   001728  72                 	db	114
   111                           
   112                           ;initializer for _lcd_1
   113   001729  23                 	db	35
   114   00172A  23                 	db	35
   115   00172B  33                 	db	51
   116   00172C  3B                 	db	59
   117   00172D  1B                 	db	27
   118   00172E  13                 	db	19
   119                           
   120                           ;initializer for _motor_1
   121   00172F  00                 	db	0
   122   001730  08                 	db	8
   123                           
   124                           ;initializer for _led_2
   125   001731  0B                 	db	11
   126                           
   127                           ;initializer for _led_1
   128   001732  03                 	db	3
   129                           
   130                           	psect	smallconst
   131   001000                     __psmallconst:
   132                           	callstack 0
   133   001000  00                 	db	0
   134   001001                     _btn_values:
   135                           	callstack 0
   136   001001  37                 	db	55
   137   001002  38                 	db	56
   138   001003  39                 	db	57
   139   001004  34                 	db	52
   140   001005  35                 	db	53
   141   001006  36                 	db	54
   142   001007  31                 	db	49
   143   001008  32                 	db	50
   144   001009  33                 	db	51
   145   00100A  23                 	db	35
   146   00100B  30                 	db	48
   147   00100C  3D                 	db	61
   148   00100D                     __end_of_btn_values:
   149                           	callstack 0
   150   000000                     _LATA	set	3977
   151   000000                     _PORTE	set	3972
   152   000000                     _PORTD	set	3971
   153   000000                     _PORTC	set	3970
   154   000000                     _PORTB	set	3969
   155   000000                     _PORTA	set	3968
   156   000000                     _TRISA	set	3986
   157   000000                     _TRISE	set	3990
   158   000000                     _TRISD	set	3989
   159   000000                     _TRISC	set	3988
   160   000000                     _TRISB	set	3987
   161   000000                     _LATE	set	3981
   162   000000                     _LATD	set	3980
   163   000000                     _LATC	set	3979
   164   000000                     _LATB	set	3978
   165   00100D                     STR_1:
   166   00100D  25                 	db	37
   167   00100E  69                 	db	105	;'i'
   168   00100F  00                 	db	0
   169   001010  00                 	db	0	; dummy byte at the end
   170   000000                     
   171                           ; #config settings
   172                           
   173                           	psect	cinit
   174   0016CE                     __pcinit:
   175                           	callstack 0
   176   0016CE                     start_initialization:
   177                           	callstack 0
   178   0016CE                     __initialization:
   179                           	callstack 0
   180                           
   181                           ; Initialize objects allocated to COMRAM (47 bytes)
   182                           ; load TBLPTR registers with __pidataCOMRAM
   183   0016CE  0E04               	movlw	low __pidataCOMRAM
   184   0016D0  6EF6               	movwf	tblptrl,c
   185   0016D2  0E17               	movlw	high __pidataCOMRAM
   186   0016D4  6EF7               	movwf	tblptrh,c
   187   0016D6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   188   0016D8  6EF8               	movwf	tblptru,c
   189   0016DA  EE00  F001         	lfsr	0,__pdataCOMRAM
   190   0016DE  EE10 F02F          	lfsr	1,47
   191   0016E2                     copy_data0:
   192   0016E2  0009               	tblrd		*+
   193   0016E4  CFF5 FFEE          	movff	tablat,postinc0
   194   0016E8  50E5               	movf	postdec1,w,c
   195   0016EA  50E1               	movf	fsr1l,w,c
   196   0016EC  E1FA               	bnz	copy_data0
   197                           
   198                           ; Clear objects allocated to COMRAM (9 bytes)
   199   0016EE  EE00  F04C         	lfsr	0,__pbssCOMRAM
   200   0016F2  0E09               	movlw	9
   201   0016F4                     clear_0:
   202   0016F4  6AEE               	clrf	postinc0,c
   203   0016F6  06E8               	decf	wreg,f,c
   204   0016F8  E1FD               	bnz	clear_0
   205   0016FA                     end_of_initialization:
   206                           	callstack 0
   207   0016FA                     __end_of__initialization:
   208                           	callstack 0
   209   0016FA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   210   0016FC  6EF8               	movwf	tblptru,c
   211   0016FE  0100               	movlb	0
   212   001700  EF9A  F00B         	goto	_main	;jump to C main() function
   213                           
   214                           	psect	bssCOMRAM
   215   00004C                     __pbssCOMRAM:
   216                           	callstack 0
   217   00004C                     _ret:
   218                           	callstack 0
   219   00004C                     	ds	1
   220   00004D                     led_toggle@F3065:
   221                           	callstack 0
   222   00004D                     	ds	1
   223   00004E                     led_turn_off@F3060:
   224                           	callstack 0
   225   00004E                     	ds	1
   226   00004F                     led_turn_on@F3055:
   227                           	callstack 0
   228   00004F                     	ds	1
   229   000050                     led_initialize@F3050:
   230                           	callstack 0
   231   000050                     	ds	1
   232   000051                     relay_toggle@F3061:
   233                           	callstack 0
   234   000051                     	ds	1
   235   000052                     relay_turn_off@F3056:
   236                           	callstack 0
   237   000052                     	ds	1
   238   000053                     relay_turn_on@F3051:
   239                           	callstack 0
   240   000053                     	ds	1
   241   000054                     relay_initialize@F3046:
   242                           	callstack 0
   243   000054                     	ds	1
   244                           
   245                           	psect	dataCOMRAM
   246   000001                     __pdataCOMRAM:
   247                           	callstack 0
   248   000001                     _lat_registers:
   249                           	callstack 0
   250   000001                     	ds	10
   251   00000B                     _port_registers:
   252                           	callstack 0
   253   00000B                     	ds	10
   254   000015                     _tris_registers:
   255                           	callstack 0
   256   000015                     	ds	10
   257   00001F                     _kp1:
   258                           	callstack 0
   259   00001F                     	ds	7
   260   000026                     _lcd_1:
   261                           	callstack 0
   262   000026                     	ds	6
   263   00002C                     _motor_1:
   264                           	callstack 0
   265   00002C                     	ds	2
   266   00002E                     _led_2:
   267                           	callstack 0
   268   00002E                     	ds	1
   269   00002F                     _led_1:
   270                           	callstack 0
   271   00002F                     	ds	1
   272                           
   273                           	psect	cstackCOMRAM
   274   000030                     __pcstackCOMRAM:
   275                           	callstack 0
   276   000030                     gpio_pin_direction_initialize@pin:
   277                           	callstack 0
   278   000030                     gpio_pin_write_logic@pin:
   279                           	callstack 0
   280                           
   281                           ; 2 bytes @ 0x0
   282   000030                     	ds	2
   283   000032                     ??_gpio_pin_direction_initialize:
   284   000032                     gpio_pin_write_logic@log:
   285                           	callstack 0
   286                           
   287                           ; 1 bytes @ 0x2
   288   000032                     	ds	1
   289   000033                     ??_gpio_pin_write_logic:
   290                           
   291                           ; 1 bytes @ 0x3
   292   000033                     	ds	5
   293   000038                     gpio_pin_direction_initialize@ret:
   294                           	callstack 0
   295                           
   296                           ; 1 bytes @ 0x8
   297   000038                     	ds	1
   298   000039                     gpio_pin_write_logic@ret:
   299                           	callstack 0
   300                           
   301                           ; 1 bytes @ 0x9
   302   000039                     	ds	1
   303   00003A                     lcd_send_4bit@lcd_obj:
   304                           	callstack 0
   305   00003A                     lcd_4bit_send_enable@lcd_obj:
   306                           	callstack 0
   307   00003A                     gpio_pin_initialize@pin:
   308                           	callstack 0
   309                           
   310                           ; 2 bytes @ 0xA
   311   00003A                     	ds	2
   312   00003C                     ??_gpio_pin_initialize:
   313   00003C                     lcd_send_4bit@data_command:
   314                           	callstack 0
   315   00003C                     lcd_4bit_send_enable@ret:
   316                           	callstack 0
   317                           
   318                           ; 1 bytes @ 0xC
   319   00003C                     	ds	1
   320   00003D                     ??_lcd_send_4bit:
   321   00003D                     gpio_pin_initialize@ret:
   322                           	callstack 0
   323                           
   324                           ; 1 bytes @ 0xD
   325   00003D                     	ds	1
   326   00003E                     dc_motor_initialize@dc_motor:
   327                           	callstack 0
   328   00003E                     keypad_initialize@keypad:
   329                           	callstack 0
   330   00003E                     led_initialize@led:
   331                           	callstack 0
   332                           
   333                           ; 2 bytes @ 0xE
   334   00003E                     	ds	1
   335   00003F                     lcd_send_4bit@ret:
   336                           	callstack 0
   337                           
   338                           ; 1 bytes @ 0xF
   339   00003F                     	ds	1
   340   000040                     ??_keypad_initialize:
   341   000040                     ??_led_initialize:
   342   000040                     dc_motor_initialize@ret:
   343                           	callstack 0
   344   000040                     lcd_send_4bit@i:
   345                           	callstack 0
   346                           
   347                           ; 2 bytes @ 0x10
   348   000040                     	ds	1
   349   000041                     led_initialize@ret:
   350                           	callstack 0
   351                           
   352                           ; 1 bytes @ 0x11
   353   000041                     	ds	1
   354   000042                     keypad_initialize@ret:
   355                           	callstack 0
   356   000042                     led_initialize@pin_obj:
   357                           	callstack 0
   358   000042                     lcd_4bit_send_command@lcd_obj:
   359                           	callstack 0
   360                           
   361                           ; 2 bytes @ 0x12
   362   000042                     	ds	1
   363   000043                     keypad_initialize@i:
   364                           	callstack 0
   365                           
   366                           ; 1 bytes @ 0x13
   367   000043                     	ds	1
   368   000044                     lcd_4bit_send_command@command:
   369                           	callstack 0
   370   000044                     keypad_initialize@i_479:
   371                           	callstack 0
   372                           
   373                           ; 1 bytes @ 0x14
   374   000044                     	ds	1
   375   000045                     lcd_4bit_send_command@ret:
   376                           	callstack 0
   377                           
   378                           ; 1 bytes @ 0x15
   379   000045                     	ds	1
   380   000046                     lcd_4bit_initialize@lcd_obj:
   381                           	callstack 0
   382                           
   383                           ; 2 bytes @ 0x16
   384   000046                     	ds	2
   385   000048                     ??_lcd_4bit_initialize:
   386                           
   387                           ; 1 bytes @ 0x18
   388   000048                     	ds	1
   389   000049                     lcd_4bit_initialize@i:
   390                           	callstack 0
   391                           
   392                           ; 2 bytes @ 0x19
   393   000049                     	ds	2
   394   00004B                     lcd_4bit_initialize@ret:
   395                           	callstack 0
   396                           
   397                           ; 1 bytes @ 0x1B
   398   00004B                     	ds	1
   399   00004C                     
   400                           ; 1 bytes @ 0x1C
   401 ;;
   402 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   403 ;;
   404 ;; *************** function _main *****************
   405 ;; Defined at:
   406 ;;		line 14 in file "application.c"
   407 ;; Parameters:    Size  Location     Type
   408 ;;		None
   409 ;; Auto vars:     Size  Location     Type
   410 ;;		None
   411 ;; Return value:  Size  Location     Type
   412 ;;                  2  499[None  ] int 
   413 ;; Registers used:
   414 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   415 ;; Tracked objects:
   416 ;;		On entry : 0/0
   417 ;;		On exit  : 0/0
   418 ;;		Unchanged: 0/0
   419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   423 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   424 ;;Total ram usage:        0 bytes
   425 ;; Hardware stack levels required when called: 6
   426 ;; This function calls:
   427 ;;		_application_initialize
   428 ;; This function is called by:
   429 ;;		Startup code after reset
   430 ;; This function uses a non-reentrant model
   431 ;;
   432                           
   433                           	psect	text0
   434   001734                     __ptext0:
   435                           	callstack 0
   436   001734                     _main:
   437                           	callstack 25
   438   001734                     
   439                           ;application.c: 15:     application_initialize();
   440   001734  ECA0  F00B         	call	_application_initialize	;wreg free
   441   001738                     l500:
   442   001738  EF9C  F00B         	goto	l500
   443   00173C  EF00  F000         	goto	start
   444   001740                     __end_of_main:
   445                           	callstack 0
   446                           
   447 ;; *************** function _application_initialize *****************
   448 ;; Defined at:
   449 ;;		line 24 in file "application.c"
   450 ;; Parameters:    Size  Location     Type
   451 ;;		None
   452 ;; Auto vars:     Size  Location     Type
   453 ;;		None
   454 ;; Return value:  Size  Location     Type
   455 ;;                  1    wreg      void 
   456 ;; Registers used:
   457 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   458 ;; Tracked objects:
   459 ;;		On entry : 0/0
   460 ;;		On exit  : 0/0
   461 ;;		Unchanged: 0/0
   462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   466 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   467 ;;Total ram usage:        0 bytes
   468 ;; Hardware stack levels used: 1
   469 ;; Hardware stack levels required when called: 5
   470 ;; This function calls:
   471 ;;		_ecu_initialize
   472 ;; This function is called by:
   473 ;;		_main
   474 ;; This function uses a non-reentrant model
   475 ;;
   476                           
   477                           	psect	text1
   478   001740                     __ptext1:
   479                           	callstack 0
   480   001740                     _application_initialize:
   481                           	callstack 25
   482   001740                     
   483                           ;application.c: 26:     ecu_initialize();
   484   001740  EC29  F00B         	call	_ecu_initialize	;wreg free
   485   001744  0012               	return		;funcret
   486   001746                     __end_of_application_initialize:
   487                           	callstack 0
   488                           
   489 ;; *************** function _ecu_initialize *****************
   490 ;; Defined at:
   491 ;;		line 91 in file "ECU_layer/ecu_initialize.c"
   492 ;; Parameters:    Size  Location     Type
   493 ;;		None
   494 ;; Auto vars:     Size  Location     Type
   495 ;;  ret             1    0        unsigned char 
   496 ;; Return value:  Size  Location     Type
   497 ;;                  1    wreg      void 
   498 ;; Registers used:
   499 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   500 ;; Tracked objects:
   501 ;;		On entry : 0/0
   502 ;;		On exit  : 0/0
   503 ;;		Unchanged: 0/0
   504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   508 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   509 ;;Total ram usage:        0 bytes
   510 ;; Hardware stack levels used: 1
   511 ;; Hardware stack levels required when called: 4
   512 ;; This function calls:
   513 ;;		_dc_motor_initialize
   514 ;;		_keypad_initialize
   515 ;;		_lcd_4bit_initialize
   516 ;;		_led_initialize
   517 ;; This function is called by:
   518 ;;		_application_initialize
   519 ;; This function uses a non-reentrant model
   520 ;;
   521                           
   522                           	psect	text2
   523   001652                     __ptext2:
   524                           	callstack 0
   525   001652                     _ecu_initialize:
   526                           	callstack 25
   527   001652  0E26               	movlw	low _lcd_1
   528   001654  6E46               	movwf	lcd_4bit_initialize@lcd_obj^0,c
   529   001656  0E00               	movlw	high _lcd_1
   530   001658  6E47               	movwf	(lcd_4bit_initialize@lcd_obj+1)^0,c
   531   00165A  ECAB  F008         	call	_lcd_4bit_initialize	;wreg free
   532   00165E  0E1F               	movlw	low _kp1
   533   001660  6E3E               	movwf	keypad_initialize@keypad^0,c
   534   001662  0E00               	movlw	high _kp1
   535   001664  6E3F               	movwf	(keypad_initialize@keypad+1)^0,c
   536   001666  EC1A  F00A         	call	_keypad_initialize	;wreg free
   537   00166A  0E2C               	movlw	low _motor_1
   538   00166C  6E3E               	movwf	dc_motor_initialize@dc_motor^0,c
   539   00166E  0E00               	movlw	high _motor_1
   540   001670  6E3F               	movwf	(dc_motor_initialize@dc_motor+1)^0,c
   541   001672  EC48  F00B         	call	_dc_motor_initialize	;wreg free
   542   001676  0E2F               	movlw	low _led_1
   543   001678  6E3E               	movwf	led_initialize@led^0,c
   544   00167A  0E00               	movlw	high _led_1
   545   00167C  6E3F               	movwf	(led_initialize@led+1)^0,c
   546   00167E  ECDA  F009         	call	_led_initialize	;wreg free
   547   001682  0E2E               	movlw	low _led_2
   548   001684  6E3E               	movwf	led_initialize@led^0,c
   549   001686  0E00               	movlw	high _led_2
   550   001688  6E3F               	movwf	(led_initialize@led+1)^0,c
   551   00168A  ECDA  F009         	call	_led_initialize	;wreg free
   552   00168E  0012               	return		;funcret
   553   001690                     __end_of_ecu_initialize:
   554                           	callstack 0
   555                           
   556 ;; *************** function _led_initialize *****************
   557 ;; Defined at:
   558 ;;		line 11 in file "ECU_layer/LED/ecu_led.c"
   559 ;; Parameters:    Size  Location     Type
   560 ;;  led             2   14[COMRAM] PTR const struct .
   561 ;;		 -> led_2(1), led_1(1), 
   562 ;; Auto vars:     Size  Location     Type
   563 ;;  pin_obj         1   18[COMRAM] struct .
   564 ;;  ret             1   17[COMRAM] unsigned char 
   565 ;; Return value:  Size  Location     Type
   566 ;;                  1    wreg      unsigned char 
   567 ;; Registers used:
   568 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   569 ;; Tracked objects:
   570 ;;		On entry : 0/0
   571 ;;		On exit  : 0/0
   572 ;;		Unchanged: 0/0
   573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   574 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   575 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   576 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   577 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   578 ;;Total ram usage:        5 bytes
   579 ;; Hardware stack levels used: 1
   580 ;; Hardware stack levels required when called: 2
   581 ;; This function calls:
   582 ;;		_gpio_pin_initialize
   583 ;; This function is called by:
   584 ;;		_ecu_initialize
   585 ;; This function uses a non-reentrant model
   586 ;;
   587                           
   588                           	psect	text3
   589   0013B4                     __ptext3:
   590                           	callstack 0
   591   0013B4                     _led_initialize:
   592                           	callstack 26
   593   0013B4                     
   594                           ;ECU_layer/LED/ecu_led.c: 11: Std_ReturnType led_initialize(const led_t *led);ECU_layer/
      +                          LED/ecu_led.c: 12: {;ECU_layer/LED/ecu_led.c: 13:     Std_ReturnType ret = (Std_ReturnTy
      +                          pe)0x01;
   595   0013B4  0E01               	movlw	1
   596   0013B6  6E41               	movwf	led_initialize@ret^0,c
   597   0013B8                     
   598                           ;ECU_layer/LED/ecu_led.c: 15:     if(led==((void*)0))
   599   0013B8  503E               	movf	led_initialize@led^0,w,c
   600   0013BA  103F               	iorwf	(led_initialize@led+1)^0,w,c
   601   0013BC  A4D8               	btfss	status,2,c
   602   0013BE  EFE3  F009         	goto	u1371
   603   0013C2  EFE5  F009         	goto	u1370
   604   0013C6                     u1371:
   605   0013C6  EFE9  F009         	goto	l284
   606   0013CA                     u1370:
   607   0013CA                     
   608                           ;ECU_layer/LED/ecu_led.c: 16:     {;ECU_layer/LED/ecu_led.c: 17:         ret = (Std_Retu
      +                          rnType)0x00;
   609   0013CA  0E00               	movlw	0
   610   0013CC  6E41               	movwf	led_initialize@ret^0,c
   611                           
   612                           ;ECU_layer/LED/ecu_led.c: 18:     }
   613   0013CE  EF18  F00A         	goto	l2381
   614   0013D2                     l284:
   615                           
   616                           ;ECU_layer/LED/ecu_led.c: 20:     {;ECU_layer/LED/ecu_led.c: 21:         pin_config pin_
      +                          obj = {
   617   0013D2  C050  F042         	movff	led_initialize@F3050,led_initialize@pin_obj
   618   0013D6  C03E  FFD9         	movff	led_initialize@led,fsr2l
   619   0013DA  C03F  FFDA         	movff	led_initialize@led+1,fsr2h
   620   0013DE  50DF               	movf	223,w,c
   621   0013E0  0B07               	andlw	7
   622   0013E2  6E40               	movwf	??_led_initialize^0,c
   623   0013E4  5042               	movf	led_initialize@pin_obj^0,w,c
   624   0013E6  1840               	xorwf	??_led_initialize^0,w,c
   625   0013E8  0BF8               	andlw	-8
   626   0013EA  1840               	xorwf	??_led_initialize^0,w,c
   627   0013EC  6E42               	movwf	led_initialize@pin_obj^0,c
   628   0013EE  C03E  FFD9         	movff	led_initialize@led,fsr2l
   629   0013F2  C03F  FFDA         	movff	led_initialize@led+1,fsr2h
   630   0013F6  30DF               	rrcf	223,w,c
   631   0013F8  32E8               	rrcf	wreg,f,c
   632   0013FA  32E8               	rrcf	wreg,f,c
   633   0013FC  0B07               	andlw	7
   634   0013FE  6E40               	movwf	??_led_initialize^0,c
   635   001400  4640               	rlncf	??_led_initialize^0,f,c
   636   001402  4640               	rlncf	??_led_initialize^0,f,c
   637   001404  4640               	rlncf	??_led_initialize^0,f,c
   638   001406  5042               	movf	led_initialize@pin_obj^0,w,c
   639   001408  1840               	xorwf	??_led_initialize^0,w,c
   640   00140A  0BC7               	andlw	-57
   641   00140C  1840               	xorwf	??_led_initialize^0,w,c
   642   00140E  6E42               	movwf	led_initialize@pin_obj^0,c
   643   001410  9C42               	bcf	led_initialize@pin_obj^0,6,c
   644   001412  C03E  FFD9         	movff	led_initialize@led,fsr2l
   645   001416  C03F  FFDA         	movff	led_initialize@led+1,fsr2h
   646   00141A  ACDF               	btfss	indf2,6,c
   647   00141C  D002               	bra	u1385
   648   00141E  8E42               	bsf	led_initialize@pin_obj^0,7,c
   649   001420  D001               	bra	u1387
   650   001422                     u1385:
   651   001422  9E42               	bcf	led_initialize@pin_obj^0,7,c
   652   001424                     u1387:
   653   001424                     
   654                           ;ECU_layer/LED/ecu_led.c: 27:         gpio_pin_initialize(&pin_obj);
   655   001424  0E42               	movlw	low led_initialize@pin_obj
   656   001426  6E3A               	movwf	gpio_pin_initialize@pin^0,c
   657   001428  0E00               	movlw	high led_initialize@pin_obj
   658   00142A  6E3B               	movwf	(gpio_pin_initialize@pin+1)^0,c
   659   00142C  ECCC  F00A         	call	_gpio_pin_initialize	;wreg free
   660   001430                     l2381:
   661                           
   662                           ;ECU_layer/LED/ecu_led.c: 30:     return ret;
   663   001430  5041               	movf	led_initialize@ret^0,w,c
   664   001432  0012               	return		;funcret
   665   001434                     __end_of_led_initialize:
   666                           	callstack 0
   667                           
   668 ;; *************** function _lcd_4bit_initialize *****************
   669 ;; Defined at:
   670 ;;		line 24 in file "ECU_layer/Char_lCD/ecu_chr_lcd.c"
   671 ;; Parameters:    Size  Location     Type
   672 ;;  lcd_obj         2   22[COMRAM] PTR const struct .
   673 ;;		 -> lcd_1(6), 
   674 ;; Auto vars:     Size  Location     Type
   675 ;;  i               2   25[COMRAM] int 
   676 ;;  ret             1   27[COMRAM] unsigned char 
   677 ;; Return value:  Size  Location     Type
   678 ;;                  1    wreg      unsigned char 
   679 ;; Registers used:
   680 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   681 ;; Tracked objects:
   682 ;;		On entry : 0/0
   683 ;;		On exit  : 0/0
   684 ;;		Unchanged: 0/0
   685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   686 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   687 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   688 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   689 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   690 ;;Total ram usage:        6 bytes
   691 ;; Hardware stack levels used: 1
   692 ;; Hardware stack levels required when called: 3
   693 ;; This function calls:
   694 ;;		_gpio_pin_initialize
   695 ;;		_lcd_4bit_send_command
   696 ;; This function is called by:
   697 ;;		_ecu_initialize
   698 ;; This function uses a non-reentrant model
   699 ;;
   700                           
   701                           	psect	text4
   702   001156                     __ptext4:
   703                           	callstack 0
   704   001156                     _lcd_4bit_initialize:
   705                           	callstack 25
   706   001156                     
   707                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 27:     if(lcd_obj == ((void*)0))
   708   001156  5046               	movf	lcd_4bit_initialize@lcd_obj^0,w,c
   709   001158  1047               	iorwf	(lcd_4bit_initialize@lcd_obj+1)^0,w,c
   710   00115A  A4D8               	btfss	status,2,c
   711   00115C  EFB2  F008         	goto	u1311
   712   001160  EFB4  F008         	goto	u1310
   713   001164                     u1311:
   714   001164  EFB8  F008         	goto	l2281
   715   001168                     u1310:
   716   001168                     
   717                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 28:     {;ECU_layer/Char_lCD/ecu_chr_lcd.c: 29:      
      +                             ret = (Std_ReturnType)0x00;
   718   001168  0E00               	movlw	0
   719   00116A  6E4B               	movwf	lcd_4bit_initialize@ret^0,c
   720                           
   721                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 30:     }
   722   00116C  EF42  F009         	goto	l2317
   723   001170                     l2281:
   724                           
   725                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 32:     {;ECU_layer/Char_lCD/ecu_chr_lcd.c: 33:      
      +                             ret = gpio_pin_initialize(&(lcd_obj->lcd_enable));
   726   001170  0E04               	movlw	4
   727   001172  2446               	addwf	lcd_4bit_initialize@lcd_obj^0,w,c
   728   001174  6E3A               	movwf	gpio_pin_initialize@pin^0,c
   729   001176  0E00               	movlw	0
   730   001178  2047               	addwfc	(lcd_4bit_initialize@lcd_obj+1)^0,w,c
   731   00117A  6E3B               	movwf	(gpio_pin_initialize@pin+1)^0,c
   732   00117C  ECCC  F00A         	call	_gpio_pin_initialize	;wreg free
   733   001180  6E4B               	movwf	lcd_4bit_initialize@ret^0,c
   734                           
   735                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 34:         ret = gpio_pin_initialize(&(lcd_obj->lcd_
      +                          rs));
   736   001182  0E05               	movlw	5
   737   001184  2446               	addwf	lcd_4bit_initialize@lcd_obj^0,w,c
   738   001186  6E3A               	movwf	gpio_pin_initialize@pin^0,c
   739   001188  0E00               	movlw	0
   740   00118A  2047               	addwfc	(lcd_4bit_initialize@lcd_obj+1)^0,w,c
   741   00118C  6E3B               	movwf	(gpio_pin_initialize@pin+1)^0,c
   742   00118E  ECCC  F00A         	call	_gpio_pin_initialize	;wreg free
   743   001192  6E4B               	movwf	lcd_4bit_initialize@ret^0,c
   744   001194                     
   745                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 36:         for(int i=0;i<4;i++)
   746   001194  0E00               	movlw	0
   747   001196  6E4A               	movwf	(lcd_4bit_initialize@i+1)^0,c
   748   001198  0E00               	movlw	0
   749   00119A  6E49               	movwf	lcd_4bit_initialize@i^0,c
   750   00119C                     l2289:
   751   00119C  5049               	movf	lcd_4bit_initialize@i^0,w,c
   752   00119E  2446               	addwf	lcd_4bit_initialize@lcd_obj^0,w,c
   753   0011A0  6E3A               	movwf	gpio_pin_initialize@pin^0,c
   754   0011A2  504A               	movf	(lcd_4bit_initialize@i+1)^0,w,c
   755   0011A4  2047               	addwfc	(lcd_4bit_initialize@lcd_obj+1)^0,w,c
   756   0011A6  6E3B               	movwf	(gpio_pin_initialize@pin+1)^0,c
   757   0011A8  ECCC  F00A         	call	_gpio_pin_initialize	;wreg free
   758   0011AC                     
   759                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 39:         }
   760   0011AC  4A49               	infsnz	lcd_4bit_initialize@i^0,f,c
   761   0011AE  2A4A               	incf	(lcd_4bit_initialize@i+1)^0,f,c
   762   0011B0  BE4A               	btfsc	(lcd_4bit_initialize@i+1)^0,7,c
   763   0011B2  EFE4  F008         	goto	u1321
   764   0011B6  504A               	movf	(lcd_4bit_initialize@i+1)^0,w,c
   765   0011B8  E109               	bnz	u1320
   766   0011BA  0E04               	movlw	4
   767   0011BC  5C49               	subwf	lcd_4bit_initialize@i^0,w,c
   768   0011BE  A0D8               	btfss	status,0,c
   769   0011C0  EFE4  F008         	goto	u1321
   770   0011C4  EFE6  F008         	goto	u1320
   771   0011C8                     u1321:
   772   0011C8  EFCE  F008         	goto	l2289
   773   0011CC                     u1320:
   774   0011CC                     
   775                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 40:          _delay((unsigned long)((20)*(4000000UL/4
      +                          000.0)));
   776   0011CC  0E1A               	movlw	26
   777   0011CE  6E48               	movwf	??_lcd_4bit_initialize^0,c
   778   0011D0  0EF8               	movlw	248
   779   0011D2                     u1937:
   780   0011D2  2EE8               	decfsz	wreg,f,c
   781   0011D4  D7FE               	bra	u1937
   782   0011D6  2E48               	decfsz	??_lcd_4bit_initialize^0,f,c
   783   0011D8  D7FC               	bra	u1937
   784   0011DA  D000               	nop2	
   785   0011DC  C046  F042         	movff	lcd_4bit_initialize@lcd_obj,lcd_4bit_send_command@lcd_obj
   786   0011E0  C047  F043         	movff	lcd_4bit_initialize@lcd_obj+1,lcd_4bit_send_command@lcd_obj+1
   787   0011E4  0E38               	movlw	56
   788   0011E6  6E44               	movwf	lcd_4bit_send_command@command^0,c
   789   0011E8  EC56  F00A         	call	_lcd_4bit_send_command	;wreg free
   790   0011EC                     
   791                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 42:         _delay((unsigned long)((5)*(4000000UL/400
      +                          0.0)));
   792   0011EC  0E07               	movlw	7
   793   0011EE  6E48               	movwf	??_lcd_4bit_initialize^0,c
   794   0011F0  0E7D               	movlw	125
   795   0011F2                     u1947:
   796   0011F2  2EE8               	decfsz	wreg,f,c
   797   0011F4  D7FE               	bra	u1947
   798   0011F6  2E48               	decfsz	??_lcd_4bit_initialize^0,f,c
   799   0011F8  D7FC               	bra	u1947
   800   0011FA  F000               	nop	
   801   0011FC  C046  F042         	movff	lcd_4bit_initialize@lcd_obj,lcd_4bit_send_command@lcd_obj
   802   001200  C047  F043         	movff	lcd_4bit_initialize@lcd_obj+1,lcd_4bit_send_command@lcd_obj+1
   803   001204  0E38               	movlw	56
   804   001206  6E44               	movwf	lcd_4bit_send_command@command^0,c
   805   001208  EC56  F00A         	call	_lcd_4bit_send_command	;wreg free
   806   00120C                     
   807                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 44:         _delay((unsigned long)((150)*(4000000UL/4
      +                          000000.0)));
   808   00120C  0E32               	movlw	50
   809   00120E                     u1957:
   810   00120E  2EE8               	decfsz	wreg,f,c
   811   001210  D7FE               	bra	u1957
   812   001212  C046  F042         	movff	lcd_4bit_initialize@lcd_obj,lcd_4bit_send_command@lcd_obj
   813   001216  C047  F043         	movff	lcd_4bit_initialize@lcd_obj+1,lcd_4bit_send_command@lcd_obj+1
   814   00121A  0E38               	movlw	56
   815   00121C  6E44               	movwf	lcd_4bit_send_command@command^0,c
   816   00121E  EC56  F00A         	call	_lcd_4bit_send_command	;wreg free
   817   001222  C046  F042         	movff	lcd_4bit_initialize@lcd_obj,lcd_4bit_send_command@lcd_obj
   818   001226  C047  F043         	movff	lcd_4bit_initialize@lcd_obj+1,lcd_4bit_send_command@lcd_obj+1
   819   00122A  0E01               	movlw	1
   820   00122C  6E44               	movwf	lcd_4bit_send_command@command^0,c
   821   00122E  EC56  F00A         	call	_lcd_4bit_send_command	;wreg free
   822   001232  C046  F042         	movff	lcd_4bit_initialize@lcd_obj,lcd_4bit_send_command@lcd_obj
   823   001236  C047  F043         	movff	lcd_4bit_initialize@lcd_obj+1,lcd_4bit_send_command@lcd_obj+1
   824   00123A  0E02               	movlw	2
   825   00123C  6E44               	movwf	lcd_4bit_send_command@command^0,c
   826   00123E  EC56  F00A         	call	_lcd_4bit_send_command	;wreg free
   827   001242  C046  F042         	movff	lcd_4bit_initialize@lcd_obj,lcd_4bit_send_command@lcd_obj
   828   001246  C047  F043         	movff	lcd_4bit_initialize@lcd_obj+1,lcd_4bit_send_command@lcd_obj+1
   829   00124A  0E06               	movlw	6
   830   00124C  6E44               	movwf	lcd_4bit_send_command@command^0,c
   831   00124E  EC56  F00A         	call	_lcd_4bit_send_command	;wreg free
   832   001252  C046  F042         	movff	lcd_4bit_initialize@lcd_obj,lcd_4bit_send_command@lcd_obj
   833   001256  C047  F043         	movff	lcd_4bit_initialize@lcd_obj+1,lcd_4bit_send_command@lcd_obj+1
   834   00125A  0E0C               	movlw	12
   835   00125C  6E44               	movwf	lcd_4bit_send_command@command^0,c
   836   00125E  EC56  F00A         	call	_lcd_4bit_send_command	;wreg free
   837   001262  C046  F042         	movff	lcd_4bit_initialize@lcd_obj,lcd_4bit_send_command@lcd_obj
   838   001266  C047  F043         	movff	lcd_4bit_initialize@lcd_obj+1,lcd_4bit_send_command@lcd_obj+1
   839   00126A  0E28               	movlw	40
   840   00126C  6E44               	movwf	lcd_4bit_send_command@command^0,c
   841   00126E  EC56  F00A         	call	_lcd_4bit_send_command	;wreg free
   842   001272                     
   843                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 51:         ret = lcd_4bit_send_command(lcd_obj,0x80)
      +                          ;
   844   001272  C046  F042         	movff	lcd_4bit_initialize@lcd_obj,lcd_4bit_send_command@lcd_obj
   845   001276  C047  F043         	movff	lcd_4bit_initialize@lcd_obj+1,lcd_4bit_send_command@lcd_obj+1
   846   00127A  0E80               	movlw	128
   847   00127C  6E44               	movwf	lcd_4bit_send_command@command^0,c
   848   00127E  EC56  F00A         	call	_lcd_4bit_send_command	;wreg free
   849   001282  6E4B               	movwf	lcd_4bit_initialize@ret^0,c
   850   001284                     l2317:
   851                           
   852                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 55:     return ret;
   853   001284  504B               	movf	lcd_4bit_initialize@ret^0,w,c
   854   001286  0012               	return		;funcret
   855   001288                     __end_of_lcd_4bit_initialize:
   856                           	callstack 0
   857                           
   858 ;; *************** function _lcd_4bit_send_command *****************
   859 ;; Defined at:
   860 ;;		line 66 in file "ECU_layer/Char_lCD/ecu_chr_lcd.c"
   861 ;; Parameters:    Size  Location     Type
   862 ;;  lcd_obj         2   18[COMRAM] PTR const struct .
   863 ;;		 -> lcd_1(6), 
   864 ;;  command         1   20[COMRAM] unsigned char 
   865 ;; Auto vars:     Size  Location     Type
   866 ;;  ret             1   21[COMRAM] unsigned char 
   867 ;; Return value:  Size  Location     Type
   868 ;;                  1    wreg      unsigned char 
   869 ;; Registers used:
   870 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   871 ;; Tracked objects:
   872 ;;		On entry : 0/0
   873 ;;		On exit  : 0/0
   874 ;;		Unchanged: 0/0
   875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   876 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   877 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   879 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   880 ;;Total ram usage:        4 bytes
   881 ;; Hardware stack levels used: 1
   882 ;; Hardware stack levels required when called: 2
   883 ;; This function calls:
   884 ;;		_gpio_pin_write_logic
   885 ;;		_lcd_4bit_send_enable
   886 ;;		_lcd_send_4bit
   887 ;; This function is called by:
   888 ;;		_lcd_4bit_initialize
   889 ;;		_lcd_4bit_send_custome_chr
   890 ;;		_lcd_4bit_set_cursor
   891 ;; This function uses a non-reentrant model
   892 ;;
   893                           
   894                           	psect	text5
   895   0014AC                     __ptext5:
   896                           	callstack 0
   897   0014AC                     _lcd_4bit_send_command:
   898                           	callstack 25
   899   0014AC                     
   900                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 69:     if(lcd_obj == ((void*)0))
   901   0014AC  5042               	movf	lcd_4bit_send_command@lcd_obj^0,w,c
   902   0014AE  1043               	iorwf	(lcd_4bit_send_command@lcd_obj+1)^0,w,c
   903   0014B0  A4D8               	btfss	status,2,c
   904   0014B2  EF5D  F00A         	goto	u1301
   905   0014B6  EF5F  F00A         	goto	u1300
   906   0014BA                     u1301:
   907   0014BA  EF63  F00A         	goto	l2269
   908   0014BE                     u1300:
   909   0014BE                     
   910                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 70:     {;ECU_layer/Char_lCD/ecu_chr_lcd.c: 71:      
      +                             ret = (Std_ReturnType)0x00;
   911   0014BE  0E00               	movlw	0
   912   0014C0  6E45               	movwf	lcd_4bit_send_command@ret^0,c
   913                           
   914                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 72:     }
   915   0014C2  EF8F  F00A         	goto	l2271
   916   0014C6                     l2269:
   917                           
   918                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 74:     {;ECU_layer/Char_lCD/ecu_chr_lcd.c: 75:      
      +                             ret = gpio_pin_write_logic(&(lcd_obj->lcd_rs),GPIO_LOW);
   919   0014C6  0E05               	movlw	5
   920   0014C8  2442               	addwf	lcd_4bit_send_command@lcd_obj^0,w,c
   921   0014CA  6E30               	movwf	gpio_pin_write_logic@pin^0,c
   922   0014CC  0E00               	movlw	0
   923   0014CE  2043               	addwfc	(lcd_4bit_send_command@lcd_obj+1)^0,w,c
   924   0014D0  6E31               	movwf	(gpio_pin_write_logic@pin+1)^0,c
   925   0014D2  0E00               	movlw	0
   926   0014D4  6E32               	movwf	gpio_pin_write_logic@log^0,c
   927   0014D6  EC44  F009         	call	_gpio_pin_write_logic	;wreg free
   928   0014DA  6E45               	movwf	lcd_4bit_send_command@ret^0,c
   929                           
   930                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 76:         ret = lcd_send_4bit(lcd_obj,(command>>4))
      +                          ;
   931   0014DC  C042  F03A         	movff	lcd_4bit_send_command@lcd_obj,lcd_send_4bit@lcd_obj
   932   0014E0  C043  F03B         	movff	lcd_4bit_send_command@lcd_obj+1,lcd_send_4bit@lcd_obj+1
   933   0014E4  3844               	swapf	lcd_4bit_send_command@command^0,w,c
   934   0014E6  0B0F               	andlw	15
   935   0014E8  6E3C               	movwf	lcd_send_4bit@data_command^0,c
   936   0014EA  EC91  F00A         	call	_lcd_send_4bit	;wreg free
   937   0014EE  6E45               	movwf	lcd_4bit_send_command@ret^0,c
   938                           
   939                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 77:         ret = lcd_4bit_send_enable(lcd_obj);
   940   0014F0  C042  F03A         	movff	lcd_4bit_send_command@lcd_obj,lcd_4bit_send_enable@lcd_obj
   941   0014F4  C043  F03B         	movff	lcd_4bit_send_command@lcd_obj+1,lcd_4bit_send_enable@lcd_obj+1
   942   0014F8  EC02  F00B         	call	_lcd_4bit_send_enable	;wreg free
   943   0014FC  6E45               	movwf	lcd_4bit_send_command@ret^0,c
   944                           
   945                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 78:         ret = lcd_send_4bit(lcd_obj,command);
   946   0014FE  C042  F03A         	movff	lcd_4bit_send_command@lcd_obj,lcd_send_4bit@lcd_obj
   947   001502  C043  F03B         	movff	lcd_4bit_send_command@lcd_obj+1,lcd_send_4bit@lcd_obj+1
   948   001506  C044  F03C         	movff	lcd_4bit_send_command@command,lcd_send_4bit@data_command
   949   00150A  EC91  F00A         	call	_lcd_send_4bit	;wreg free
   950   00150E  6E45               	movwf	lcd_4bit_send_command@ret^0,c
   951                           
   952                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 79:         ret = lcd_4bit_send_enable(lcd_obj);
   953   001510  C042  F03A         	movff	lcd_4bit_send_command@lcd_obj,lcd_4bit_send_enable@lcd_obj
   954   001514  C043  F03B         	movff	lcd_4bit_send_command@lcd_obj+1,lcd_4bit_send_enable@lcd_obj+1
   955   001518  EC02  F00B         	call	_lcd_4bit_send_enable	;wreg free
   956   00151C  6E45               	movwf	lcd_4bit_send_command@ret^0,c
   957   00151E                     l2271:
   958                           
   959                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 81:     return ret;
   960   00151E  5045               	movf	lcd_4bit_send_command@ret^0,w,c
   961   001520  0012               	return		;funcret
   962   001522                     __end_of_lcd_4bit_send_command:
   963                           	callstack 0
   964                           
   965 ;; *************** function _lcd_send_4bit *****************
   966 ;; Defined at:
   967 ;;		line 485 in file "ECU_layer/Char_lCD/ecu_chr_lcd.c"
   968 ;; Parameters:    Size  Location     Type
   969 ;;  lcd_obj         2   10[COMRAM] PTR const struct .
   970 ;;		 -> lcd_1(6), 
   971 ;;  data_command    1   12[COMRAM] unsigned char 
   972 ;; Auto vars:     Size  Location     Type
   973 ;;  i               2   16[COMRAM] int 
   974 ;;  ret             1   15[COMRAM] unsigned char 
   975 ;; Return value:  Size  Location     Type
   976 ;;                  1    wreg      unsigned char 
   977 ;; Registers used:
   978 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   979 ;; Tracked objects:
   980 ;;		On entry : 0/0
   981 ;;		On exit  : 0/0
   982 ;;		Unchanged: 0/0
   983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   984 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   985 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   986 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   987 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   988 ;;Total ram usage:        8 bytes
   989 ;; Hardware stack levels used: 1
   990 ;; Hardware stack levels required when called: 1
   991 ;; This function calls:
   992 ;;		_gpio_pin_write_logic
   993 ;; This function is called by:
   994 ;;		_lcd_4bit_send_command
   995 ;;		_lcd_4bit_send_char
   996 ;; This function uses a non-reentrant model
   997 ;;
   998                           
   999                           	psect	text6
  1000   001522                     __ptext6:
  1001                           	callstack 0
  1002   001522                     _lcd_send_4bit:
  1003                           	callstack 25
  1004   001522                     
  1005                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 488:     if(lcd_obj == ((void*)0))
  1006   001522  503A               	movf	lcd_send_4bit@lcd_obj^0,w,c
  1007   001524  103B               	iorwf	(lcd_send_4bit@lcd_obj+1)^0,w,c
  1008   001526  A4D8               	btfss	status,2,c
  1009   001528  EF98  F00A         	goto	u1181
  1010   00152C  EF9A  F00A         	goto	u1180
  1011   001530                     u1181:
  1012   001530  EF9E  F00A         	goto	l2195
  1013   001534                     u1180:
  1014   001534                     
  1015                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 489:     {;ECU_layer/Char_lCD/ecu_chr_lcd.c: 490:    
      +                               ret = (Std_ReturnType)0x00;
  1016   001534  0E00               	movlw	0
  1017   001536  6E3F               	movwf	lcd_send_4bit@ret^0,c
  1018                           
  1019                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 491:     }
  1020   001538  EFCA  F00A         	goto	l2207
  1021   00153C                     l2195:
  1022                           
  1023                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 493:     {;ECU_layer/Char_lCD/ecu_chr_lcd.c: 494:    
      +                               for(int i=0;i<4;i++)
  1024   00153C  0E00               	movlw	0
  1025   00153E  6E41               	movwf	(lcd_send_4bit@i+1)^0,c
  1026   001540  0E00               	movlw	0
  1027   001542  6E40               	movwf	lcd_send_4bit@i^0,c
  1028   001544                     l2201:
  1029                           
  1030                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 495:         {;ECU_layer/Char_lCD/ecu_chr_lcd.c: 496:
      +                                       ret = gpio_pin_write_logic(&(lcd_obj->lcd_data[i]),(data_command >> i) & (u
      +                          int8)0x01);
  1031   001544  5040               	movf	lcd_send_4bit@i^0,w,c
  1032   001546  243A               	addwf	lcd_send_4bit@lcd_obj^0,w,c
  1033   001548  6E30               	movwf	gpio_pin_write_logic@pin^0,c
  1034   00154A  5041               	movf	(lcd_send_4bit@i+1)^0,w,c
  1035   00154C  203B               	addwfc	(lcd_send_4bit@lcd_obj+1)^0,w,c
  1036   00154E  6E31               	movwf	(gpio_pin_write_logic@pin+1)^0,c
  1037   001550  C040  F03D         	movff	lcd_send_4bit@i,??_lcd_send_4bit
  1038   001554  C03C  F03E         	movff	lcd_send_4bit@data_command,??_lcd_send_4bit+1
  1039   001558  2A3D               	incf	??_lcd_send_4bit^0,f,c
  1040   00155A  EFB1  F00A         	goto	u1194
  1041   00155E                     u1195:
  1042   00155E  90D8               	bcf	status,0,c
  1043   001560  323E               	rrcf	(??_lcd_send_4bit+1)^0,f,c
  1044   001562                     u1194:
  1045   001562  2E3D               	decfsz	??_lcd_send_4bit^0,f,c
  1046   001564  EFAF  F00A         	goto	u1195
  1047   001568  503E               	movf	(??_lcd_send_4bit+1)^0,w,c
  1048   00156A  0B01               	andlw	1
  1049   00156C  6E32               	movwf	gpio_pin_write_logic@log^0,c
  1050   00156E  EC44  F009         	call	_gpio_pin_write_logic	;wreg free
  1051   001572  6E3F               	movwf	lcd_send_4bit@ret^0,c
  1052   001574                     
  1053                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 497:         }
  1054   001574  4A40               	infsnz	lcd_send_4bit@i^0,f,c
  1055   001576  2A41               	incf	(lcd_send_4bit@i+1)^0,f,c
  1056   001578  BE41               	btfsc	(lcd_send_4bit@i+1)^0,7,c
  1057   00157A  EFC8  F00A         	goto	u1201
  1058   00157E  5041               	movf	(lcd_send_4bit@i+1)^0,w,c
  1059   001580  E109               	bnz	u1200
  1060   001582  0E04               	movlw	4
  1061   001584  5C40               	subwf	lcd_send_4bit@i^0,w,c
  1062   001586  A0D8               	btfss	status,0,c
  1063   001588  EFC8  F00A         	goto	u1201
  1064   00158C  EFCA  F00A         	goto	u1200
  1065   001590                     u1201:
  1066   001590  EFA2  F00A         	goto	l2201
  1067   001594                     u1200:
  1068   001594                     l2207:
  1069                           
  1070                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 500:     return ret;
  1071   001594  503F               	movf	lcd_send_4bit@ret^0,w,c
  1072   001596  0012               	return		;funcret
  1073   001598                     __end_of_lcd_send_4bit:
  1074                           	callstack 0
  1075                           
  1076 ;; *************** function _lcd_4bit_send_enable *****************
  1077 ;; Defined at:
  1078 ;;		line 503 in file "ECU_layer/Char_lCD/ecu_chr_lcd.c"
  1079 ;; Parameters:    Size  Location     Type
  1080 ;;  lcd_obj         2   10[COMRAM] PTR const struct .
  1081 ;;		 -> lcd_1(6), 
  1082 ;; Auto vars:     Size  Location     Type
  1083 ;;  ret             1   12[COMRAM] unsigned char 
  1084 ;; Return value:  Size  Location     Type
  1085 ;;                  1    wreg      unsigned char 
  1086 ;; Registers used:
  1087 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1088 ;; Tracked objects:
  1089 ;;		On entry : 0/0
  1090 ;;		On exit  : 0/0
  1091 ;;		Unchanged: 0/0
  1092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1093 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1094 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1096 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1097 ;;Total ram usage:        3 bytes
  1098 ;; Hardware stack levels used: 1
  1099 ;; Hardware stack levels required when called: 1
  1100 ;; This function calls:
  1101 ;;		_gpio_pin_write_logic
  1102 ;; This function is called by:
  1103 ;;		_lcd_4bit_send_command
  1104 ;;		_lcd_4bit_send_char
  1105 ;; This function uses a non-reentrant model
  1106 ;;
  1107                           
  1108                           	psect	text7
  1109   001604                     __ptext7:
  1110                           	callstack 0
  1111   001604                     _lcd_4bit_send_enable:
  1112                           	callstack 25
  1113   001604                     
  1114                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 506:     if(lcd_obj == ((void*)0))
  1115   001604  503A               	movf	lcd_4bit_send_enable@lcd_obj^0,w,c
  1116   001606  103B               	iorwf	(lcd_4bit_send_enable@lcd_obj+1)^0,w,c
  1117   001608  A4D8               	btfss	status,2,c
  1118   00160A  EF09  F00B         	goto	u1211
  1119   00160E  EF0B  F00B         	goto	u1210
  1120   001612                     u1211:
  1121   001612  EF0F  F00B         	goto	l2217
  1122   001616                     u1210:
  1123   001616                     
  1124                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 507:     {;ECU_layer/Char_lCD/ecu_chr_lcd.c: 508:    
      +                               ret = (Std_ReturnType)0x00;
  1125   001616  0E00               	movlw	0
  1126   001618  6E3C               	movwf	lcd_4bit_send_enable@ret^0,c
  1127                           
  1128                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 509:     }
  1129   00161A  EF27  F00B         	goto	l2221
  1130   00161E                     l2217:
  1131   00161E  0E04               	movlw	4
  1132   001620  243A               	addwf	lcd_4bit_send_enable@lcd_obj^0,w,c
  1133   001622  6E30               	movwf	gpio_pin_write_logic@pin^0,c
  1134   001624  0E00               	movlw	0
  1135   001626  203B               	addwfc	(lcd_4bit_send_enable@lcd_obj+1)^0,w,c
  1136   001628  6E31               	movwf	(gpio_pin_write_logic@pin+1)^0,c
  1137   00162A  0E01               	movlw	1
  1138   00162C  6E32               	movwf	gpio_pin_write_logic@log^0,c
  1139   00162E  EC44  F009         	call	_gpio_pin_write_logic	;wreg free
  1140   001632                     
  1141                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 513:         _delay((unsigned long)((5)*(4000000UL/40
      +                          00000.0)));
  1142   001632  D000               	nop2		;2 cycle nop
  1143   001634  D000               	nop2		;2 cycle nop
  1144   001636  F000               	nop	
  1145                           
  1146                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 514:         ret = gpio_pin_write_logic(&(lcd_obj->lc
      +                          d_enable),GPIO_LOW);
  1147   001638  0E04               	movlw	4
  1148   00163A  243A               	addwf	lcd_4bit_send_enable@lcd_obj^0,w,c
  1149   00163C  6E30               	movwf	gpio_pin_write_logic@pin^0,c
  1150   00163E  0E00               	movlw	0
  1151   001640  203B               	addwfc	(lcd_4bit_send_enable@lcd_obj+1)^0,w,c
  1152   001642  6E31               	movwf	(gpio_pin_write_logic@pin+1)^0,c
  1153   001644  0E00               	movlw	0
  1154   001646  6E32               	movwf	gpio_pin_write_logic@log^0,c
  1155   001648  EC44  F009         	call	_gpio_pin_write_logic	;wreg free
  1156   00164C  6E3C               	movwf	lcd_4bit_send_enable@ret^0,c
  1157   00164E                     l2221:
  1158                           
  1159                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 517:     return ret;
  1160   00164E  503C               	movf	lcd_4bit_send_enable@ret^0,w,c
  1161   001650  0012               	return		;funcret
  1162   001652                     __end_of_lcd_4bit_send_enable:
  1163                           	callstack 0
  1164                           
  1165 ;; *************** function _keypad_initialize *****************
  1166 ;; Defined at:
  1167 ;;		line 28 in file "ECU_layer/key_pad/ecu_key_pad.c"
  1168 ;; Parameters:    Size  Location     Type
  1169 ;;  keypad          2   14[COMRAM] PTR const struct .
  1170 ;;		 -> kp1(7), 
  1171 ;; Auto vars:     Size  Location     Type
  1172 ;;  i               1   20[COMRAM] unsigned char 
  1173 ;;  i               1   19[COMRAM] unsigned char 
  1174 ;;  ret             1   18[COMRAM] unsigned char 
  1175 ;; Return value:  Size  Location     Type
  1176 ;;                  1    wreg      unsigned char 
  1177 ;; Registers used:
  1178 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1179 ;; Tracked objects:
  1180 ;;		On entry : 0/0
  1181 ;;		On exit  : 0/0
  1182 ;;		Unchanged: 0/0
  1183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1184 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1185 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1186 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1187 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1188 ;;Total ram usage:        7 bytes
  1189 ;; Hardware stack levels used: 1
  1190 ;; Hardware stack levels required when called: 2
  1191 ;; This function calls:
  1192 ;;		_gpio_pin_direction_initialize
  1193 ;;		_gpio_pin_initialize
  1194 ;; This function is called by:
  1195 ;;		_ecu_initialize
  1196 ;; This function uses a non-reentrant model
  1197 ;;
  1198                           
  1199                           	psect	text8
  1200   001434                     __ptext8:
  1201                           	callstack 0
  1202   001434                     _keypad_initialize:
  1203                           	callstack 26
  1204   001434                     
  1205                           ;ECU_layer/key_pad/ecu_key_pad.c: 31:     if(keypad==((void*)0))
  1206   001434  503E               	movf	keypad_initialize@keypad^0,w,c
  1207   001436  103F               	iorwf	(keypad_initialize@keypad+1)^0,w,c
  1208   001438  A4D8               	btfss	status,2,c
  1209   00143A  EF21  F00A         	goto	u1341
  1210   00143E  EF23  F00A         	goto	u1340
  1211   001442                     u1341:
  1212   001442  EF27  F00A         	goto	l2339
  1213   001446                     u1340:
  1214   001446                     
  1215                           ;ECU_layer/key_pad/ecu_key_pad.c: 32:     {;ECU_layer/key_pad/ecu_key_pad.c: 33:        
      +                           ret = (Std_ReturnType)0x00;
  1216   001446  0E00               	movlw	0
  1217   001448  6E42               	movwf	keypad_initialize@ret^0,c
  1218                           
  1219                           ;ECU_layer/key_pad/ecu_key_pad.c: 34:     }
  1220   00144A  EF54  F00A         	goto	l2363
  1221   00144E                     l2339:
  1222                           
  1223                           ;ECU_layer/key_pad/ecu_key_pad.c: 36:     {;ECU_layer/key_pad/ecu_key_pad.c: 37:        
      +                           for(uint8 i=0;i<4;i++)
  1224   00144E  0E00               	movlw	0
  1225   001450  6E43               	movwf	keypad_initialize@i^0,c
  1226   001452                     l2345:
  1227   001452  5043               	movf	keypad_initialize@i^0,w,c
  1228   001454  243E               	addwf	keypad_initialize@keypad^0,w,c
  1229   001456  6E3A               	movwf	gpio_pin_initialize@pin^0,c
  1230   001458  0E00               	movlw	0
  1231   00145A  203F               	addwfc	(keypad_initialize@keypad+1)^0,w,c
  1232   00145C  6E3B               	movwf	(gpio_pin_initialize@pin+1)^0,c
  1233   00145E  ECCC  F00A         	call	_gpio_pin_initialize	;wreg free
  1234   001462                     
  1235                           ;ECU_layer/key_pad/ecu_key_pad.c: 40:         }
  1236   001462  2A43               	incf	keypad_initialize@i^0,f,c
  1237   001464  0E03               	movlw	3
  1238   001466  6443               	cpfsgt	keypad_initialize@i^0,c
  1239   001468  EF38  F00A         	goto	u1351
  1240   00146C  EF3A  F00A         	goto	u1350
  1241   001470                     u1351:
  1242   001470  EF29  F00A         	goto	l2345
  1243   001474                     u1350:
  1244   001474                     
  1245                           ;ECU_layer/key_pad/ecu_key_pad.c: 41:         for(uint8 i=0;i<4;i++)
  1246   001474  0E00               	movlw	0
  1247   001476  6E44               	movwf	keypad_initialize@i_479^0,c
  1248   001478                     l2357:
  1249                           
  1250                           ;ECU_layer/key_pad/ecu_key_pad.c: 42:         {;ECU_layer/key_pad/ecu_key_pad.c: 43:    
      +                                   ret = gpio_pin_direction_initialize(&(keypad->keypad_coulmns_pins[i]));
  1251   001478  5044               	movf	keypad_initialize@i_479^0,w,c
  1252   00147A  243E               	addwf	keypad_initialize@keypad^0,w,c
  1253   00147C  6E40               	movwf	??_keypad_initialize^0,c
  1254   00147E  0E00               	movlw	0
  1255   001480  203F               	addwfc	(keypad_initialize@keypad+1)^0,w,c
  1256   001482  6E41               	movwf	(??_keypad_initialize+1)^0,c
  1257   001484  0E04               	movlw	4
  1258   001486  2440               	addwf	??_keypad_initialize^0,w,c
  1259   001488  6E30               	movwf	gpio_pin_direction_initialize@pin^0,c
  1260   00148A  0E00               	movlw	0
  1261   00148C  2041               	addwfc	(??_keypad_initialize+1)^0,w,c
  1262   00148E  6E31               	movwf	(gpio_pin_direction_initialize@pin+1)^0,c
  1263   001490  EC09  F008         	call	_gpio_pin_direction_initialize	;wreg free
  1264   001494  6E42               	movwf	keypad_initialize@ret^0,c
  1265   001496                     
  1266                           ;ECU_layer/key_pad/ecu_key_pad.c: 44:         }
  1267   001496  2A44               	incf	keypad_initialize@i_479^0,f,c
  1268   001498  0E03               	movlw	3
  1269   00149A  6444               	cpfsgt	keypad_initialize@i_479^0,c
  1270   00149C  EF52  F00A         	goto	u1361
  1271   0014A0  EF54  F00A         	goto	u1360
  1272   0014A4                     u1361:
  1273   0014A4  EF3C  F00A         	goto	l2357
  1274   0014A8                     u1360:
  1275   0014A8                     l2363:
  1276                           
  1277                           ;ECU_layer/key_pad/ecu_key_pad.c: 47:      return ret;
  1278   0014A8  5042               	movf	keypad_initialize@ret^0,w,c
  1279   0014AA  0012               	return		;funcret
  1280   0014AC                     __end_of_keypad_initialize:
  1281                           	callstack 0
  1282                           
  1283 ;; *************** function _dc_motor_initialize *****************
  1284 ;; Defined at:
  1285 ;;		line 20 in file "ECU_layer/DC_Motor/ecu_Dc_motor.c"
  1286 ;; Parameters:    Size  Location     Type
  1287 ;;  dc_motor        2   14[COMRAM] PTR const struct .
  1288 ;;		 -> motor_1(2), 
  1289 ;; Auto vars:     Size  Location     Type
  1290 ;;  ret             1   16[COMRAM] unsigned char 
  1291 ;; Return value:  Size  Location     Type
  1292 ;;                  1    wreg      unsigned char 
  1293 ;; Registers used:
  1294 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1295 ;; Tracked objects:
  1296 ;;		On entry : 0/0
  1297 ;;		On exit  : 0/0
  1298 ;;		Unchanged: 0/0
  1299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1300 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1301 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1303 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1304 ;;Total ram usage:        3 bytes
  1305 ;; Hardware stack levels used: 1
  1306 ;; Hardware stack levels required when called: 2
  1307 ;; This function calls:
  1308 ;;		_gpio_pin_initialize
  1309 ;; This function is called by:
  1310 ;;		_ecu_initialize
  1311 ;; This function uses a non-reentrant model
  1312 ;;
  1313                           
  1314                           	psect	text9
  1315   001690                     __ptext9:
  1316                           	callstack 0
  1317   001690                     _dc_motor_initialize:
  1318                           	callstack 26
  1319   001690                     
  1320                           ;ECU_layer/DC_Motor/ecu_Dc_motor.c: 23:     if(dc_motor == ((void*)0))
  1321   001690  503E               	movf	dc_motor_initialize@dc_motor^0,w,c
  1322   001692  103F               	iorwf	(dc_motor_initialize@dc_motor+1)^0,w,c
  1323   001694  A4D8               	btfss	status,2,c
  1324   001696  EF4F  F00B         	goto	u1331
  1325   00169A  EF51  F00B         	goto	u1330
  1326   00169E                     u1331:
  1327   00169E  EF55  F00B         	goto	l2327
  1328   0016A2                     u1330:
  1329   0016A2                     
  1330                           ;ECU_layer/DC_Motor/ecu_Dc_motor.c: 24:     {;ECU_layer/DC_Motor/ecu_Dc_motor.c: 25:    
      +                               ret = (Std_ReturnType)0x00;
  1331   0016A2  0E00               	movlw	0
  1332   0016A4  6E40               	movwf	dc_motor_initialize@ret^0,c
  1333                           
  1334                           ;ECU_layer/DC_Motor/ecu_Dc_motor.c: 26:     }
  1335   0016A6  EF65  F00B         	goto	l2329
  1336   0016AA                     l2327:
  1337                           
  1338                           ;ECU_layer/DC_Motor/ecu_Dc_motor.c: 28:     {;ECU_layer/DC_Motor/ecu_Dc_motor.c: 31:    
      +                               ret = gpio_pin_initialize(&(dc_motor->dc_motor_pin[0]));
  1339   0016AA  C03E  F03A         	movff	dc_motor_initialize@dc_motor,gpio_pin_initialize@pin
  1340   0016AE  C03F  F03B         	movff	dc_motor_initialize@dc_motor+1,gpio_pin_initialize@pin+1
  1341   0016B2  ECCC  F00A         	call	_gpio_pin_initialize	;wreg free
  1342   0016B6  6E40               	movwf	dc_motor_initialize@ret^0,c
  1343                           
  1344                           ;ECU_layer/DC_Motor/ecu_Dc_motor.c: 32:         ret = gpio_pin_initialize(&(dc_motor->dc
      +                          _motor_pin[1]));
  1345   0016B8  0E01               	movlw	1
  1346   0016BA  243E               	addwf	dc_motor_initialize@dc_motor^0,w,c
  1347   0016BC  6E3A               	movwf	gpio_pin_initialize@pin^0,c
  1348   0016BE  0E00               	movlw	0
  1349   0016C0  203F               	addwfc	(dc_motor_initialize@dc_motor+1)^0,w,c
  1350   0016C2  6E3B               	movwf	(gpio_pin_initialize@pin+1)^0,c
  1351   0016C4  ECCC  F00A         	call	_gpio_pin_initialize	;wreg free
  1352   0016C8  6E40               	movwf	dc_motor_initialize@ret^0,c
  1353   0016CA                     l2329:
  1354                           
  1355                           ;ECU_layer/DC_Motor/ecu_Dc_motor.c: 34:     return ret;
  1356   0016CA  5040               	movf	dc_motor_initialize@ret^0,w,c
  1357   0016CC  0012               	return		;funcret
  1358   0016CE                     __end_of_dc_motor_initialize:
  1359                           	callstack 0
  1360                           
  1361 ;; *************** function _gpio_pin_initialize *****************
  1362 ;; Defined at:
  1363 ;;		line 146 in file "MCAL_layer/GPIO/hal_gpio.c"
  1364 ;; Parameters:    Size  Location     Type
  1365 ;;  pin             2   10[COMRAM] PTR const struct .
  1366 ;;		 -> motor_1.dc_motor_pin(2), motor_1(2), lcd_1.lcd_data(4), lcd_1(6), 
  1367 ;;		 -> kp1.keypad_ROWS_pins(4), kp1(7), led_initialize@pin_obj(1), relay_initialize@relay_pin(1), 
  1368 ;; Auto vars:     Size  Location     Type
  1369 ;;  ret             1   13[COMRAM] unsigned char 
  1370 ;; Return value:  Size  Location     Type
  1371 ;;                  1    wreg      unsigned char 
  1372 ;; Registers used:
  1373 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1374 ;; Tracked objects:
  1375 ;;		On entry : 0/0
  1376 ;;		On exit  : 0/0
  1377 ;;		Unchanged: 0/0
  1378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1379 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1380 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1381 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1382 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1383 ;;Total ram usage:        4 bytes
  1384 ;; Hardware stack levels used: 1
  1385 ;; Hardware stack levels required when called: 1
  1386 ;; This function calls:
  1387 ;;		_gpio_pin_direction_initialize
  1388 ;;		_gpio_pin_write_logic
  1389 ;; This function is called by:
  1390 ;;		_lcd_4bit_initialize
  1391 ;;		_dc_motor_initialize
  1392 ;;		_keypad_initialize
  1393 ;;		_led_initialize
  1394 ;;		_lcd_8bit_initialize
  1395 ;;		_relay_initialize
  1396 ;;		_initialize_seven_segment
  1397 ;; This function uses a non-reentrant model
  1398 ;;
  1399                           
  1400                           	psect	text10
  1401   001598                     __ptext10:
  1402                           	callstack 0
  1403   001598                     _gpio_pin_initialize:
  1404                           	callstack 26
  1405   001598                     
  1406                           ;MCAL_layer/GPIO/hal_gpio.c: 149:     if((pin==((void*)0))||(pin->pin>=8))
  1407   001598  503A               	movf	gpio_pin_initialize@pin^0,w,c
  1408   00159A  103B               	iorwf	(gpio_pin_initialize@pin+1)^0,w,c
  1409   00159C  B4D8               	btfsc	status,2,c
  1410   00159E  EFD3  F00A         	goto	u1281
  1411   0015A2  EFD5  F00A         	goto	u1280
  1412   0015A6                     u1281:
  1413   0015A6  EFE6  F00A         	goto	l2255
  1414   0015AA                     u1280:
  1415   0015AA  C03A  FFD9         	movff	gpio_pin_initialize@pin,fsr2l
  1416   0015AE  C03B  FFDA         	movff	gpio_pin_initialize@pin+1,fsr2h
  1417   0015B2  30DF               	rrcf	223,w,c
  1418   0015B4  32E8               	rrcf	wreg,f,c
  1419   0015B6  32E8               	rrcf	wreg,f,c
  1420   0015B8  0B07               	andlw	7
  1421   0015BA  6E3C               	movwf	??_gpio_pin_initialize^0,c
  1422   0015BC  0E07               	movlw	7
  1423   0015BE  643C               	cpfsgt	??_gpio_pin_initialize^0,c
  1424   0015C0  EFE4  F00A         	goto	u1291
  1425   0015C4  EFE6  F00A         	goto	u1290
  1426   0015C8                     u1291:
  1427   0015C8  EFEA  F00A         	goto	l2257
  1428   0015CC                     u1290:
  1429   0015CC                     l2255:
  1430                           
  1431                           ;MCAL_layer/GPIO/hal_gpio.c: 150:     {;MCAL_layer/GPIO/hal_gpio.c: 151:         ret = (
      +                          Std_ReturnType)0x00;
  1432   0015CC  0E00               	movlw	0
  1433   0015CE  6E3D               	movwf	gpio_pin_initialize@ret^0,c
  1434                           
  1435                           ;MCAL_layer/GPIO/hal_gpio.c: 152:     }
  1436   0015D0  EF00  F00B         	goto	l2259
  1437   0015D4                     l2257:
  1438                           
  1439                           ;MCAL_layer/GPIO/hal_gpio.c: 154:     {;MCAL_layer/GPIO/hal_gpio.c: 155:         ret = g
      +                          pio_pin_direction_initialize(pin);
  1440   0015D4  C03A  F030         	movff	gpio_pin_initialize@pin,gpio_pin_direction_initialize@pin
  1441   0015D8  C03B  F031         	movff	gpio_pin_initialize@pin+1,gpio_pin_direction_initialize@pin+1
  1442   0015DC  EC09  F008         	call	_gpio_pin_direction_initialize	;wreg free
  1443   0015E0  6E3D               	movwf	gpio_pin_initialize@ret^0,c
  1444                           
  1445                           ;MCAL_layer/GPIO/hal_gpio.c: 156:         ret = gpio_pin_write_logic(pin,pin->logic);
  1446   0015E2  C03A  F030         	movff	gpio_pin_initialize@pin,gpio_pin_write_logic@pin
  1447   0015E6  C03B  F031         	movff	gpio_pin_initialize@pin+1,gpio_pin_write_logic@pin+1
  1448   0015EA  C03A  FFD9         	movff	gpio_pin_initialize@pin,fsr2l
  1449   0015EE  C03B  FFDA         	movff	gpio_pin_initialize@pin+1,fsr2h
  1450   0015F2  0E00               	movlw	0
  1451   0015F4  BEDF               	btfsc	indf2,7,c
  1452   0015F6  0E01               	movlw	1
  1453   0015F8  6E32               	movwf	gpio_pin_write_logic@log^0,c
  1454   0015FA  EC44  F009         	call	_gpio_pin_write_logic	;wreg free
  1455   0015FE  6E3D               	movwf	gpio_pin_initialize@ret^0,c
  1456   001600                     l2259:
  1457                           
  1458                           ;MCAL_layer/GPIO/hal_gpio.c: 158:     return ret;
  1459   001600  503D               	movf	gpio_pin_initialize@ret^0,w,c
  1460   001602  0012               	return		;funcret
  1461   001604                     __end_of_gpio_pin_initialize:
  1462                           	callstack 0
  1463                           
  1464 ;; *************** function _gpio_pin_write_logic *****************
  1465 ;; Defined at:
  1466 ;;		line 96 in file "MCAL_layer/GPIO/hal_gpio.c"
  1467 ;; Parameters:    Size  Location     Type
  1468 ;;  pin             2    0[COMRAM] PTR const struct .
  1469 ;;		 -> motor_1.dc_motor_pin(2), motor_1(2), lcd_1.lcd_data(4), lcd_1(6), 
  1470 ;;		 -> kp1.keypad_ROWS_pins(4), kp1(7), led_turn_off@pin_obj(1), led_turn_on@pin_obj(1), 
  1471 ;;		 -> led_initialize@pin_obj(1), relay_turn_off@relay_pin(1), relay_turn_on@relay_pin(1), relay_initialize@relay_pin(1
      +), 
  1472 ;;  log             1    2[COMRAM] enum E2986
  1473 ;; Auto vars:     Size  Location     Type
  1474 ;;  ret             1    9[COMRAM] unsigned char 
  1475 ;; Return value:  Size  Location     Type
  1476 ;;                  1    wreg      unsigned char 
  1477 ;; Registers used:
  1478 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1479 ;; Tracked objects:
  1480 ;;		On entry : 0/0
  1481 ;;		On exit  : 0/0
  1482 ;;		Unchanged: 0/0
  1483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1484 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1485 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1486 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1487 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1488 ;;Total ram usage:       10 bytes
  1489 ;; Hardware stack levels used: 1
  1490 ;; This function calls:
  1491 ;;		Nothing
  1492 ;; This function is called by:
  1493 ;;		_lcd_4bit_send_command
  1494 ;;		_lcd_send_4bit
  1495 ;;		_lcd_4bit_send_enable
  1496 ;;		_gpio_pin_initialize
  1497 ;;		_lcd_4bit_send_char
  1498 ;;		_lcd_8bit_send_command
  1499 ;;		_lcd_8bit_send_char
  1500 ;;		_lcd_8bit_send_enable
  1501 ;;		_dc_motor_move_right
  1502 ;;		_dc_motor_move_left
  1503 ;;		_dc_motor_stop
  1504 ;;		_relay_turn_on
  1505 ;;		_relay_turn_off
  1506 ;;		_keypad_get_value
  1507 ;;		_led_turn_on
  1508 ;;		_led_turn_off
  1509 ;;		_seven_segment_write_number
  1510 ;; This function uses a non-reentrant model
  1511 ;;
  1512                           
  1513                           	psect	text11
  1514   001288                     __ptext11:
  1515                           	callstack 0
  1516   001288                     _gpio_pin_write_logic:
  1517                           	callstack 26
  1518   001288                     
  1519                           ;MCAL_layer/GPIO/hal_gpio.c: 96: Std_ReturnType gpio_pin_write_logic(const pin_config *p
      +                          in,logic_t log);MCAL_layer/GPIO/hal_gpio.c: 97: {;MCAL_layer/GPIO/hal_gpio.c: 98:     St
      +                          d_ReturnType ret = (Std_ReturnType)0x01;
  1520   001288  0E01               	movlw	1
  1521   00128A  6E39               	movwf	gpio_pin_write_logic@ret^0,c
  1522   00128C                     
  1523                           ;MCAL_layer/GPIO/hal_gpio.c: 99:     if((pin==((void*)0))||(pin->pin>=8))
  1524   00128C  5030               	movf	gpio_pin_write_logic@pin^0,w,c
  1525   00128E  1031               	iorwf	(gpio_pin_write_logic@pin+1)^0,w,c
  1526   001290  B4D8               	btfsc	status,2,c
  1527   001292  EF4D  F009         	goto	u1141
  1528   001296  EF4F  F009         	goto	u1140
  1529   00129A                     u1141:
  1530   00129A  EF60  F009         	goto	l2171
  1531   00129E                     u1140:
  1532   00129E  C030  FFD9         	movff	gpio_pin_write_logic@pin,fsr2l
  1533   0012A2  C031  FFDA         	movff	gpio_pin_write_logic@pin+1,fsr2h
  1534   0012A6  30DF               	rrcf	223,w,c
  1535   0012A8  32E8               	rrcf	wreg,f,c
  1536   0012AA  32E8               	rrcf	wreg,f,c
  1537   0012AC  0B07               	andlw	7
  1538   0012AE  6E33               	movwf	??_gpio_pin_write_logic^0,c
  1539   0012B0  0E07               	movlw	7
  1540   0012B2  6433               	cpfsgt	??_gpio_pin_write_logic^0,c
  1541   0012B4  EF5E  F009         	goto	u1151
  1542   0012B8  EF60  F009         	goto	u1150
  1543   0012BC                     u1151:
  1544   0012BC  EFC3  F009         	goto	l2179
  1545   0012C0                     u1150:
  1546   0012C0                     l2171:
  1547                           
  1548                           ;MCAL_layer/GPIO/hal_gpio.c: 100:     {;MCAL_layer/GPIO/hal_gpio.c: 101:         ret = (
      +                          Std_ReturnType)0x00;
  1549   0012C0  0E00               	movlw	0
  1550   0012C2  6E39               	movwf	gpio_pin_write_logic@ret^0,c
  1551                           
  1552                           ;MCAL_layer/GPIO/hal_gpio.c: 102:     }
  1553   0012C4  EFD8  F009         	goto	l2181
  1554   0012C8                     l2173:
  1555                           
  1556                           ;MCAL_layer/GPIO/hal_gpio.c: 108:                 (*lat_registers[pin->port] &= ~((uint8
      +                          )1 << pin->pin));
  1557   0012C8  C030  FFD9         	movff	gpio_pin_write_logic@pin,fsr2l
  1558   0012CC  C031  FFDA         	movff	gpio_pin_write_logic@pin+1,fsr2h
  1559   0012D0  30DF               	rrcf	223,w,c
  1560   0012D2  32E8               	rrcf	wreg,f,c
  1561   0012D4  32E8               	rrcf	wreg,f,c
  1562   0012D6  0B07               	andlw	7
  1563   0012D8  6E33               	movwf	??_gpio_pin_write_logic^0,c
  1564   0012DA  0E01               	movlw	1
  1565   0012DC  6E34               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1566   0012DE  2A33               	incf	??_gpio_pin_write_logic^0,f,c
  1567   0012E0  EF74  F009         	goto	u1164
  1568   0012E4                     u1165:
  1569   0012E4  90D8               	bcf	status,0,c
  1570   0012E6  3634               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1571   0012E8                     u1164:
  1572   0012E8  2E33               	decfsz	??_gpio_pin_write_logic^0,f,c
  1573   0012EA  EF72  F009         	goto	u1165
  1574   0012EE  5034               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1575   0012F0  0AFF               	xorlw	255
  1576   0012F2  6E35               	movwf	(??_gpio_pin_write_logic+2)^0,c
  1577   0012F4  C030  FFD9         	movff	gpio_pin_write_logic@pin,fsr2l
  1578   0012F8  C031  FFDA         	movff	gpio_pin_write_logic@pin+1,fsr2h
  1579   0012FC  50DF               	movf	223,w,c
  1580   0012FE  0B07               	andlw	7
  1581   001300  6E36               	movwf	(??_gpio_pin_write_logic+3)^0,c
  1582   001302  5036               	movf	(??_gpio_pin_write_logic+3)^0,w,c
  1583   001304  0D02               	mullw	2
  1584   001306  0E01               	movlw	low _lat_registers
  1585   001308  24F3               	addwf	243,w,c
  1586   00130A  6ED9               	movwf	fsr2l,c
  1587   00130C  0E00               	movlw	high _lat_registers
  1588   00130E  20F4               	addwfc	prodh,w,c
  1589   001310  6EDA               	movwf	fsr2h,c
  1590   001312  CFDE F037          	movff	postinc2,??_gpio_pin_write_logic+4
  1591   001316  CFDD F038          	movff	postdec2,??_gpio_pin_write_logic+5
  1592   00131A  C037  FFD9         	movff	??_gpio_pin_write_logic+4,fsr2l
  1593   00131E  C038  FFDA         	movff	??_gpio_pin_write_logic+5,fsr2h
  1594   001322  5035               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  1595   001324  16DF               	andwf	indf2,f,c
  1596                           
  1597                           ;MCAL_layer/GPIO/hal_gpio.c: 109:                 break;
  1598   001326  EFD8  F009         	goto	l2181
  1599   00132A                     l2175:
  1600                           
  1601                           ;MCAL_layer/GPIO/hal_gpio.c: 111:                 (*lat_registers[pin->port] |= ((uint8)
      +                          1 << pin->pin));
  1602   00132A  C030  FFD9         	movff	gpio_pin_write_logic@pin,fsr2l
  1603   00132E  C031  FFDA         	movff	gpio_pin_write_logic@pin+1,fsr2h
  1604   001332  30DF               	rrcf	223,w,c
  1605   001334  32E8               	rrcf	wreg,f,c
  1606   001336  32E8               	rrcf	wreg,f,c
  1607   001338  0B07               	andlw	7
  1608   00133A  6E33               	movwf	??_gpio_pin_write_logic^0,c
  1609   00133C  0E01               	movlw	1
  1610   00133E  6E34               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1611   001340  2A33               	incf	??_gpio_pin_write_logic^0,f,c
  1612   001342  EFA5  F009         	goto	u1174
  1613   001346                     u1175:
  1614   001346  90D8               	bcf	status,0,c
  1615   001348  3634               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1616   00134A                     u1174:
  1617   00134A  2E33               	decfsz	??_gpio_pin_write_logic^0,f,c
  1618   00134C  EFA3  F009         	goto	u1175
  1619   001350  C030  FFD9         	movff	gpio_pin_write_logic@pin,fsr2l
  1620   001354  C031  FFDA         	movff	gpio_pin_write_logic@pin+1,fsr2h
  1621   001358  50DF               	movf	223,w,c
  1622   00135A  0B07               	andlw	7
  1623   00135C  6E35               	movwf	(??_gpio_pin_write_logic+2)^0,c
  1624   00135E  5035               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  1625   001360  0D02               	mullw	2
  1626   001362  0E01               	movlw	low _lat_registers
  1627   001364  24F3               	addwf	243,w,c
  1628   001366  6ED9               	movwf	fsr2l,c
  1629   001368  0E00               	movlw	high _lat_registers
  1630   00136A  20F4               	addwfc	prodh,w,c
  1631   00136C  6EDA               	movwf	fsr2h,c
  1632   00136E  CFDE F036          	movff	postinc2,??_gpio_pin_write_logic+3
  1633   001372  CFDD F037          	movff	postdec2,??_gpio_pin_write_logic+4
  1634   001376  C036  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  1635   00137A  C037  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  1636   00137E  5034               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1637   001380  12DF               	iorwf	indf2,f,c
  1638                           
  1639                           ;MCAL_layer/GPIO/hal_gpio.c: 112:                 break;
  1640   001382  EFD8  F009         	goto	l2181
  1641   001386                     l2179:
  1642   001386  5032               	movf	gpio_pin_write_logic@log^0,w,c
  1643   001388  6E33               	movwf	??_gpio_pin_write_logic^0,c
  1644   00138A  6A34               	clrf	(??_gpio_pin_write_logic+1)^0,c
  1645                           
  1646                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1647                           ; Switch size 1, requested type "simple"
  1648                           ; Number of cases is 1, Range of values is 0 to 0
  1649                           ; switch strategies available:
  1650                           ; Name         Instructions Cycles
  1651                           ; simple_byte            4     3 (average)
  1652                           ;	Chosen strategy is simple_byte
  1653   00138C  5034               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1654   00138E  0A00               	xorlw	0	; case 0
  1655   001390  B4D8               	btfsc	status,2,c
  1656   001392  EFCD  F009         	goto	l2923
  1657   001396  EF60  F009         	goto	l2171
  1658   00139A                     l2923:
  1659                           
  1660                           ; Switch size 1, requested type "simple"
  1661                           ; Number of cases is 2, Range of values is 0 to 1
  1662                           ; switch strategies available:
  1663                           ; Name         Instructions Cycles
  1664                           ; simple_byte            7     4 (average)
  1665                           ;	Chosen strategy is simple_byte
  1666   00139A  5033               	movf	??_gpio_pin_write_logic^0,w,c
  1667   00139C  0A00               	xorlw	0	; case 0
  1668   00139E  B4D8               	btfsc	status,2,c
  1669   0013A0  EF64  F009         	goto	l2173
  1670   0013A4  0A01               	xorlw	1	; case 1
  1671   0013A6  B4D8               	btfsc	status,2,c
  1672   0013A8  EF95  F009         	goto	l2175
  1673   0013AC  EF60  F009         	goto	l2171
  1674   0013B0                     l2181:
  1675                           
  1676                           ;MCAL_layer/GPIO/hal_gpio.c: 117:      return ret;
  1677   0013B0  5039               	movf	gpio_pin_write_logic@ret^0,w,c
  1678   0013B2  0012               	return		;funcret
  1679   0013B4                     __end_of_gpio_pin_write_logic:
  1680                           	callstack 0
  1681                           
  1682 ;; *************** function _gpio_pin_direction_initialize *****************
  1683 ;; Defined at:
  1684 ;;		line 22 in file "MCAL_layer/GPIO/hal_gpio.c"
  1685 ;; Parameters:    Size  Location     Type
  1686 ;;  pin             2    0[COMRAM] PTR const struct .
  1687 ;;		 -> motor_1.dc_motor_pin(2), motor_1(2), lcd_1.lcd_data(4), lcd_1(6), 
  1688 ;;		 -> kp1.keypad_coulmns_pins(3), kp1.keypad_ROWS_pins(4), kp1(7), led_initialize@pin_obj(1), 
  1689 ;;		 -> relay_initialize@relay_pin(1), 
  1690 ;; Auto vars:     Size  Location     Type
  1691 ;;  ret             1    8[COMRAM] unsigned char 
  1692 ;; Return value:  Size  Location     Type
  1693 ;;                  1    wreg      unsigned char 
  1694 ;; Registers used:
  1695 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1696 ;; Tracked objects:
  1697 ;;		On entry : 0/0
  1698 ;;		On exit  : 0/0
  1699 ;;		Unchanged: 0/0
  1700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1701 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1702 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1703 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1704 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1705 ;;Total ram usage:        9 bytes
  1706 ;; Hardware stack levels used: 1
  1707 ;; This function calls:
  1708 ;;		Nothing
  1709 ;; This function is called by:
  1710 ;;		_keypad_initialize
  1711 ;;		_gpio_pin_initialize
  1712 ;;		_push_button_initialize
  1713 ;; This function uses a non-reentrant model
  1714 ;;
  1715                           
  1716                           	psect	text12
  1717   001012                     __ptext12:
  1718                           	callstack 0
  1719   001012                     _gpio_pin_direction_initialize:
  1720                           	callstack 26
  1721   001012                     
  1722                           ;MCAL_layer/GPIO/hal_gpio.c: 22: Std_ReturnType gpio_pin_direction_initialize(const pin_
      +                          config *pin);MCAL_layer/GPIO/hal_gpio.c: 23: {;MCAL_layer/GPIO/hal_gpio.c: 24:     Std_R
      +                          eturnType ret = (Std_ReturnType)0x01;
  1723   001012  0E01               	movlw	1
  1724   001014  6E38               	movwf	gpio_pin_direction_initialize@ret^0,c
  1725   001016                     
  1726                           ;MCAL_layer/GPIO/hal_gpio.c: 25:     if((pin==((void*)0))||(pin->pin>=8))
  1727   001016  5030               	movf	gpio_pin_direction_initialize@pin^0,w,c
  1728   001018  1031               	iorwf	(gpio_pin_direction_initialize@pin+1)^0,w,c
  1729   00101A  B4D8               	btfsc	status,2,c
  1730   00101C  EF12  F008         	goto	u1221
  1731   001020  EF14  F008         	goto	u1220
  1732   001024                     u1221:
  1733   001024  EF25  F008         	goto	l2231
  1734   001028                     u1220:
  1735   001028  C030  FFD9         	movff	gpio_pin_direction_initialize@pin,fsr2l
  1736   00102C  C031  FFDA         	movff	gpio_pin_direction_initialize@pin+1,fsr2h
  1737   001030  30DF               	rrcf	223,w,c
  1738   001032  32E8               	rrcf	wreg,f,c
  1739   001034  32E8               	rrcf	wreg,f,c
  1740   001036  0B07               	andlw	7
  1741   001038  6E32               	movwf	??_gpio_pin_direction_initialize^0,c
  1742   00103A  0E07               	movlw	7
  1743   00103C  6432               	cpfsgt	??_gpio_pin_direction_initialize^0,c
  1744   00103E  EF23  F008         	goto	u1231
  1745   001042  EF25  F008         	goto	u1230
  1746   001046                     u1231:
  1747   001046  EF88  F008         	goto	l2239
  1748   00104A                     u1230:
  1749   00104A                     l2231:
  1750                           
  1751                           ;MCAL_layer/GPIO/hal_gpio.c: 26:     {;MCAL_layer/GPIO/hal_gpio.c: 27:         ret = (St
      +                          d_ReturnType)0x00;
  1752   00104A  0E00               	movlw	0
  1753   00104C  6E38               	movwf	gpio_pin_direction_initialize@ret^0,c
  1754                           
  1755                           ;MCAL_layer/GPIO/hal_gpio.c: 28:     }
  1756   00104E  EFA9  F008         	goto	l2241
  1757   001052                     l2233:
  1758                           
  1759                           ;MCAL_layer/GPIO/hal_gpio.c: 34:                 (*tris_registers[pin->port] &= ~((uint8
      +                          )1 << pin->pin));
  1760   001052  C030  FFD9         	movff	gpio_pin_direction_initialize@pin,fsr2l
  1761   001056  C031  FFDA         	movff	gpio_pin_direction_initialize@pin+1,fsr2h
  1762   00105A  30DF               	rrcf	223,w,c
  1763   00105C  32E8               	rrcf	wreg,f,c
  1764   00105E  32E8               	rrcf	wreg,f,c
  1765   001060  0B07               	andlw	7
  1766   001062  6E32               	movwf	??_gpio_pin_direction_initialize^0,c
  1767   001064  0E01               	movlw	1
  1768   001066  6E33               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  1769   001068  2A32               	incf	??_gpio_pin_direction_initialize^0,f,c
  1770   00106A  EF39  F008         	goto	u1244
  1771   00106E                     u1245:
  1772   00106E  90D8               	bcf	status,0,c
  1773   001070  3633               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  1774   001072                     u1244:
  1775   001072  2E32               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  1776   001074  EF37  F008         	goto	u1245
  1777   001078  5033               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  1778   00107A  0AFF               	xorlw	255
  1779   00107C  6E34               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
  1780   00107E  C030  FFD9         	movff	gpio_pin_direction_initialize@pin,fsr2l
  1781   001082  C031  FFDA         	movff	gpio_pin_direction_initialize@pin+1,fsr2h
  1782   001086  50DF               	movf	223,w,c
  1783   001088  0B07               	andlw	7
  1784   00108A  6E35               	movwf	(??_gpio_pin_direction_initialize+3)^0,c
  1785   00108C  5035               	movf	(??_gpio_pin_direction_initialize+3)^0,w,c
  1786   00108E  0D02               	mullw	2
  1787   001090  0E15               	movlw	low _tris_registers
  1788   001092  24F3               	addwf	243,w,c
  1789   001094  6ED9               	movwf	fsr2l,c
  1790   001096  0E00               	movlw	high _tris_registers
  1791   001098  20F4               	addwfc	prodh,w,c
  1792   00109A  6EDA               	movwf	fsr2h,c
  1793   00109C  CFDE F036          	movff	postinc2,??_gpio_pin_direction_initialize+4
  1794   0010A0  CFDD F037          	movff	postdec2,??_gpio_pin_direction_initialize+5
  1795   0010A4  C036  FFD9         	movff	??_gpio_pin_direction_initialize+4,fsr2l
  1796   0010A8  C037  FFDA         	movff	??_gpio_pin_direction_initialize+5,fsr2h
  1797   0010AC  5034               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
  1798   0010AE  16DF               	andwf	indf2,f,c
  1799                           
  1800                           ;MCAL_layer/GPIO/hal_gpio.c: 35:                 break;
  1801   0010B0  EFA9  F008         	goto	l2241
  1802   0010B4                     l2235:
  1803                           
  1804                           ;MCAL_layer/GPIO/hal_gpio.c: 37:                 (*tris_registers[pin->port] |= ((uint8)
      +                          1 << pin->pin));
  1805   0010B4  C030  FFD9         	movff	gpio_pin_direction_initialize@pin,fsr2l
  1806   0010B8  C031  FFDA         	movff	gpio_pin_direction_initialize@pin+1,fsr2h
  1807   0010BC  30DF               	rrcf	223,w,c
  1808   0010BE  32E8               	rrcf	wreg,f,c
  1809   0010C0  32E8               	rrcf	wreg,f,c
  1810   0010C2  0B07               	andlw	7
  1811   0010C4  6E32               	movwf	??_gpio_pin_direction_initialize^0,c
  1812   0010C6  0E01               	movlw	1
  1813   0010C8  6E33               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  1814   0010CA  2A32               	incf	??_gpio_pin_direction_initialize^0,f,c
  1815   0010CC  EF6A  F008         	goto	u1254
  1816   0010D0                     u1255:
  1817   0010D0  90D8               	bcf	status,0,c
  1818   0010D2  3633               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  1819   0010D4                     u1254:
  1820   0010D4  2E32               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  1821   0010D6  EF68  F008         	goto	u1255
  1822   0010DA  C030  FFD9         	movff	gpio_pin_direction_initialize@pin,fsr2l
  1823   0010DE  C031  FFDA         	movff	gpio_pin_direction_initialize@pin+1,fsr2h
  1824   0010E2  50DF               	movf	223,w,c
  1825   0010E4  0B07               	andlw	7
  1826   0010E6  6E34               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
  1827   0010E8  5034               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
  1828   0010EA  0D02               	mullw	2
  1829   0010EC  0E15               	movlw	low _tris_registers
  1830   0010EE  24F3               	addwf	243,w,c
  1831   0010F0  6ED9               	movwf	fsr2l,c
  1832   0010F2  0E00               	movlw	high _tris_registers
  1833   0010F4  20F4               	addwfc	prodh,w,c
  1834   0010F6  6EDA               	movwf	fsr2h,c
  1835   0010F8  CFDE F035          	movff	postinc2,??_gpio_pin_direction_initialize+3
  1836   0010FC  CFDD F036          	movff	postdec2,??_gpio_pin_direction_initialize+4
  1837   001100  C035  FFD9         	movff	??_gpio_pin_direction_initialize+3,fsr2l
  1838   001104  C036  FFDA         	movff	??_gpio_pin_direction_initialize+4,fsr2h
  1839   001108  5033               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  1840   00110A  12DF               	iorwf	indf2,f,c
  1841                           
  1842                           ;MCAL_layer/GPIO/hal_gpio.c: 38:                 break;
  1843   00110C  EFA9  F008         	goto	l2241
  1844   001110                     l2239:
  1845   001110  C030  FFD9         	movff	gpio_pin_direction_initialize@pin,fsr2l
  1846   001114  C031  FFDA         	movff	gpio_pin_direction_initialize@pin+1,fsr2h
  1847   001118  BCDF               	btfsc	indf2,6,c
  1848   00111A  EF91  F008         	goto	u1261
  1849   00111E  EF94  F008         	goto	u1260
  1850   001122                     u1261:
  1851   001122  0E01               	movlw	1
  1852   001124  EF95  F008         	goto	u1270
  1853   001128                     u1260:
  1854   001128  0E00               	movlw	0
  1855   00112A                     u1270:
  1856   00112A  6E32               	movwf	??_gpio_pin_direction_initialize^0,c
  1857   00112C  6A33               	clrf	(??_gpio_pin_direction_initialize+1)^0,c
  1858                           
  1859                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1860                           ; Switch size 1, requested type "simple"
  1861                           ; Number of cases is 1, Range of values is 0 to 0
  1862                           ; switch strategies available:
  1863                           ; Name         Instructions Cycles
  1864                           ; simple_byte            4     3 (average)
  1865                           ;	Chosen strategy is simple_byte
  1866   00112E  5033               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  1867   001130  0A00               	xorlw	0	; case 0
  1868   001132  B4D8               	btfsc	status,2,c
  1869   001134  EF9E  F008         	goto	l2925
  1870   001138  EF25  F008         	goto	l2231
  1871   00113C                     l2925:
  1872                           
  1873                           ; Switch size 1, requested type "simple"
  1874                           ; Number of cases is 2, Range of values is 0 to 1
  1875                           ; switch strategies available:
  1876                           ; Name         Instructions Cycles
  1877                           ; simple_byte            7     4 (average)
  1878                           ;	Chosen strategy is simple_byte
  1879   00113C  5032               	movf	??_gpio_pin_direction_initialize^0,w,c
  1880   00113E  0A00               	xorlw	0	; case 0
  1881   001140  B4D8               	btfsc	status,2,c
  1882   001142  EF29  F008         	goto	l2233
  1883   001146  0A01               	xorlw	1	; case 1
  1884   001148  B4D8               	btfsc	status,2,c
  1885   00114A  EF5A  F008         	goto	l2235
  1886   00114E  EF25  F008         	goto	l2231
  1887   001152                     l2241:
  1888                           
  1889                           ;MCAL_layer/GPIO/hal_gpio.c: 43:     return ret;
  1890   001152  5038               	movf	gpio_pin_direction_initialize@ret^0,w,c
  1891   001154  0012               	return		;funcret
  1892   001156                     __end_of_gpio_pin_direction_initialize:
  1893                           	callstack 0
  1894                           
  1895                           	psect	rparam
  1896   000000                     
  1897                           	psect	config
  1898                           
  1899                           ; Padding undefined space
  1900   300000                     	org	3145728
  1901   300000  FF                 	db	255
  1902                           
  1903                           ;Config register CONFIG1H @ 0x300001
  1904                           ;	Oscillator Selection bits
  1905                           ;	OSC = HS, HS oscillator
  1906                           ;	Fail-Safe Clock Monitor Enable bit
  1907                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1908                           ;	Internal/External Oscillator Switchover bit
  1909                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1910   300001                     	org	3145729
  1911   300001  02                 	db	2
  1912                           
  1913                           ;Config register CONFIG2L @ 0x300002
  1914                           ;	Power-up Timer Enable bit
  1915                           ;	PWRT = OFF, PWRT disabled
  1916                           ;	Brown-out Reset Enable bits
  1917                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  1918                           ;	Brown Out Reset Voltage bits
  1919                           ;	BORV = 1, 
  1920   300002                     	org	3145730
  1921   300002  09                 	db	9
  1922                           
  1923                           ;Config register CONFIG2H @ 0x300003
  1924                           ;	Watchdog Timer Enable bit
  1925                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1926                           ;	Watchdog Timer Postscale Select bits
  1927                           ;	WDTPS = 32768, 1:32768
  1928   300003                     	org	3145731
  1929   300003  1E                 	db	30
  1930                           
  1931                           ; Padding undefined space
  1932   300004                     	org	3145732
  1933   300004  FF                 	db	255
  1934                           
  1935                           ;Config register CONFIG3H @ 0x300005
  1936                           ;	CCP2 MUX bit
  1937                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1938                           ;	PORTB A/D Enable bit
  1939                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1940                           ;	Low-Power Timer1 Oscillator Enable bit
  1941                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1942                           ;	MCLR Pin Enable bit
  1943                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1944   300005                     	org	3145733
  1945   300005  81                 	db	129
  1946                           
  1947                           ;Config register CONFIG4L @ 0x300006
  1948                           ;	Stack Full/Underflow Reset Enable bit
  1949                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1950                           ;	Single-Supply ICSP Enable bit
  1951                           ;	LVP = OFF, Single-Supply ICSP disabled
  1952                           ;	Extended Instruction Set Enable bit
  1953                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1954                           ;	Background Debugger Enable bit
  1955                           ;	DEBUG = 0x1, unprogrammed default
  1956   300006                     	org	3145734
  1957   300006  81                 	db	129
  1958                           
  1959                           ; Padding undefined space
  1960   300007                     	org	3145735
  1961   300007  FF                 	db	255
  1962                           
  1963                           ;Config register CONFIG5L @ 0x300008
  1964                           ;	Code Protection bit
  1965                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1966                           ;	Code Protection bit
  1967                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1968                           ;	Code Protection bit
  1969                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1970                           ;	Code Protection bit
  1971                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1972   300008                     	org	3145736
  1973   300008  0F                 	db	15
  1974                           
  1975                           ;Config register CONFIG5H @ 0x300009
  1976                           ;	Boot Block Code Protection bit
  1977                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1978                           ;	Data EEPROM Code Protection bit
  1979                           ;	CPD = OFF, Data EEPROM not code-protected
  1980   300009                     	org	3145737
  1981   300009  C0                 	db	192
  1982                           
  1983                           ;Config register CONFIG6L @ 0x30000A
  1984                           ;	Write Protection bit
  1985                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1986                           ;	Write Protection bit
  1987                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1988                           ;	Write Protection bit
  1989                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1990                           ;	Write Protection bit
  1991                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  1992   30000A                     	org	3145738
  1993   30000A  0F                 	db	15
  1994                           
  1995                           ;Config register CONFIG6H @ 0x30000B
  1996                           ;	Configuration Register Write Protection bit
  1997                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1998                           ;	Boot Block Write Protection bit
  1999                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  2000                           ;	Data EEPROM Write Protection bit
  2001                           ;	WRTD = OFF, Data EEPROM not write-protected
  2002   30000B                     	org	3145739
  2003   30000B  E0                 	db	224
  2004                           
  2005                           ;Config register CONFIG7L @ 0x30000C
  2006                           ;	Table Read Protection bit
  2007                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  2008                           ;	Table Read Protection bit
  2009                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2010                           ;	Table Read Protection bit
  2011                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  2012                           ;	Table Read Protection bit
  2013                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  2014   30000C                     	org	3145740
  2015   30000C  0F                 	db	15
  2016                           
  2017                           ;Config register CONFIG7H @ 0x30000D
  2018                           ;	Boot Block Table Read Protection bit
  2019                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2020   30000D                     	org	3145741
  2021   30000D  40                 	db	64
  2022                           tosu	equ	0xFFF
  2023                           tosh	equ	0xFFE
  2024                           tosl	equ	0xFFD
  2025                           stkptr	equ	0xFFC
  2026                           pclatu	equ	0xFFB
  2027                           pclath	equ	0xFFA
  2028                           pcl	equ	0xFF9
  2029                           tblptru	equ	0xFF8
  2030                           tblptrh	equ	0xFF7
  2031                           tblptrl	equ	0xFF6
  2032                           tablat	equ	0xFF5
  2033                           prodh	equ	0xFF4
  2034                           prodl	equ	0xFF3
  2035                           indf0	equ	0xFEF
  2036                           postinc0	equ	0xFEE
  2037                           postdec0	equ	0xFED
  2038                           preinc0	equ	0xFEC
  2039                           plusw0	equ	0xFEB
  2040                           fsr0h	equ	0xFEA
  2041                           fsr0l	equ	0xFE9
  2042                           wreg	equ	0xFE8
  2043                           indf1	equ	0xFE7
  2044                           postinc1	equ	0xFE6
  2045                           postdec1	equ	0xFE5
  2046                           preinc1	equ	0xFE4
  2047                           plusw1	equ	0xFE3
  2048                           fsr1h	equ	0xFE2
  2049                           fsr1l	equ	0xFE1
  2050                           bsr	equ	0xFE0
  2051                           indf2	equ	0xFDF
  2052                           postinc2	equ	0xFDE
  2053                           postdec2	equ	0xFDD
  2054                           preinc2	equ	0xFDC
  2055                           plusw2	equ	0xFDB
  2056                           fsr2h	equ	0xFDA
  2057                           fsr2l	equ	0xFD9
  2058                           status	equ	0xFD8

Data Sizes:
    Strings     3
    Constant    12
    Data        47
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     28      84
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    vfprintf$2	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf$1	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfprintf$0	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    S1282$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1282$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    gpio_pin_initialize@pin	PTR const struct . size(2) Largest target is 7
		 -> motor_1.dc_motor_pin(COMRAM[2]), motor_1(COMRAM[2]), lcd_1.lcd_data(COMRAM[4]), lcd_1(COMRAM[6]), 
		 -> kp1.keypad_ROWS_pins(COMRAM[4]), kp1(COMRAM[7]), led_initialize@pin_obj(COMRAM[1]), relay_initialize@relay_pin(COMRAM[1]), 

    gpio_pin_write_logic@pin	PTR const struct . size(2) Largest target is 7
		 -> motor_1.dc_motor_pin(COMRAM[2]), motor_1(COMRAM[2]), lcd_1.lcd_data(COMRAM[4]), lcd_1(COMRAM[6]), 
		 -> kp1.keypad_ROWS_pins(COMRAM[4]), kp1(COMRAM[7]), led_turn_off@pin_obj(COMRAM[1]), led_turn_on@pin_obj(COMRAM[1]), 
		 -> led_initialize@pin_obj(COMRAM[1]), relay_turn_off@relay_pin(COMRAM[1]), relay_turn_on@relay_pin(COMRAM[1]), relay_initialize@relay_pin(COMRAM[1]), 

    gpio_pin_direction_initialize@pin	PTR const struct . size(2) Largest target is 7
		 -> motor_1.dc_motor_pin(COMRAM[2]), motor_1(COMRAM[2]), lcd_1.lcd_data(COMRAM[4]), lcd_1(COMRAM[6]), 
		 -> kp1.keypad_coulmns_pins(COMRAM[3]), kp1.keypad_ROWS_pins(COMRAM[4]), kp1(COMRAM[7]), led_initialize@pin_obj(COMRAM[1]), 
		 -> relay_initialize@relay_pin(COMRAM[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATB(BITBIGSFRlh[1]), 
		 -> LATA(BITBIGSFRll[1]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), 
		 -> PORTA(BITBIGSFRll[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISE(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISB(BITBIGSFRh[1]), 
		 -> TRISA(BITBIGSFRll[1]), 

    led_initialize@led	PTR const struct . size(2) Largest target is 1
		 -> led_2(COMRAM[1]), led_1(COMRAM[1]), 

    keypad_initialize@keypad	PTR const struct . size(2) Largest target is 7
		 -> kp1(COMRAM[7]), 

    dc_motor_initialize@dc_motor	PTR const struct . size(2) Largest target is 2
		 -> motor_1(COMRAM[2]), 

    lcd_4bit_send_enable@lcd_obj	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    lcd_send_4bit@lcd_obj	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    sp__memset	PTR void  size(2) Largest target is 0

    lcd_4bit_send_command@lcd_obj	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    lcd_4bit_initialize@lcd_obj	PTR const struct . size(2) Largest target is 6
		 -> lcd_1(COMRAM[6]), 


Critical Paths under _main in COMRAM

    _ecu_initialize->_lcd_4bit_initialize
    _led_initialize->_gpio_pin_initialize
    _lcd_4bit_initialize->_lcd_4bit_send_command
    _lcd_4bit_send_command->_lcd_send_4bit
    _lcd_send_4bit->_gpio_pin_write_logic
    _lcd_4bit_send_enable->_gpio_pin_write_logic
    _keypad_initialize->_gpio_pin_initialize
    _dc_motor_initialize->_gpio_pin_initialize
    _gpio_pin_initialize->_gpio_pin_write_logic

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   42950
             _application_initialize
 ---------------------------------------------------------------------------------
 (1) _application_initialize                               0     0      0   42950
                     _ecu_initialize
 ---------------------------------------------------------------------------------
 (2) _ecu_initialize                                       1     1      0   42950
                _dc_motor_initialize
                  _keypad_initialize
                _lcd_4bit_initialize
                     _led_initialize
 ---------------------------------------------------------------------------------
 (3) _led_initialize                                       5     3      2    6422
                                             14 COMRAM     5     3      2
                _gpio_pin_initialize
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_initialize                                  6     4      2   23407
                                             22 COMRAM     6     4      2
                _gpio_pin_initialize
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (4) _lcd_4bit_send_command                                4     1      3   16823
                                             18 COMRAM     4     1      3
               _gpio_pin_write_logic
               _lcd_4bit_send_enable
                      _lcd_send_4bit
 ---------------------------------------------------------------------------------
 (5) _lcd_send_4bit                                        8     5      3    5224
                                             10 COMRAM     8     5      3
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (5) _lcd_4bit_send_enable                                 3     1      2    4831
                                             10 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _keypad_initialize                                    7     5      2    6829
                                             14 COMRAM     7     5      2
      _gpio_pin_direction_initialize
                _gpio_pin_initialize
 ---------------------------------------------------------------------------------
 (3) _dc_motor_initialize                                  3     1      2    6286
                                             14 COMRAM     3     1      2
                _gpio_pin_initialize
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_initialize                                  4     2      2    6118
                                             10 COMRAM     4     2      2
      _gpio_pin_direction_initialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_write_logic                                10     7      3    4435
                                              0 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_direction_initialize                        9     7      2     407
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _application_initialize
     _ecu_initialize
       _dc_motor_initialize
         _gpio_pin_initialize
           _gpio_pin_direction_initialize
           _gpio_pin_write_logic
       _keypad_initialize
         _gpio_pin_direction_initialize
         _gpio_pin_initialize
       _lcd_4bit_initialize
         _gpio_pin_initialize
         _lcd_4bit_send_command
           _gpio_pin_write_logic
           _lcd_4bit_send_enable
             _gpio_pin_write_logic
           _lcd_send_4bit
             _gpio_pin_write_logic
       _led_initialize
         _gpio_pin_initialize

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     1C      54       1       66.1%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      54      39        0.0%
DATA                 0      0      54       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Thu Aug 17 12:46:28 2023

                       ?_lcd_send_4bit 003A                                     l31 1286  
                                   l36 1520                                    l142 1596  
                                  l147 1650                                    l420 1154  
                                  l500 1738                                    l261 14AA  
                                  l501 1738                                    l185 16CC  
                                  l506 1744                                    l460 1602  
                                  l284 13D2                                    l372 168E  
                                  l446 13B2                                    l288 1432  
                 keypad_initialize@ret 0042                                    _kp1 001F  
                                  _ret 004C                    led_initialize@F3050 0050  
                                  prod 0FF3                                    wreg 0FE8  
                relay_initialize@F3046 0054                   _lcd_4bit_send_enable 1604  
                                 l2201 1544                                   l2211 1604  
                                 l2203 1574                                   l2221 164E  
                                 l2213 1604                                   l2205 1578  
                                 l2301 120C                                   l2231 104A  
                                 l2215 1616                                   l2207 1594  
                                 l2311 1252                                   l2303 1212  
                                 l2233 1052                                   l2241 1152  
                                 l2225 1012                                   l2321 1690  
                                 l2217 161E                                   l2313 1262  
                                 l2305 1222                                   l2235 10B4  
                                 l2227 1016                                   l2171 12C0  
                                 l2251 1598                                   l2323 1690  
                                 l2219 1632                                   l2315 1272  
                                 l2307 1232                                   l2229 1028  
                                 l2173 12C8                                   l2181 13B0  
                                 l2165 1288                                   l2253 15AA  
                                 l2325 16A2                                   l2333 1434  
                                 l2309 1242                                   l2317 1284  
                                 l2239 1110                                   l2175 132A  
                                 l2167 128C                                   l2255 15CC  
                                 l2327 16AA                                   l2351 1474  
                                 l2335 1434                                   l2191 1522  
                                 l2271 151E                                   l2263 14AC  
                                 l2169 129E                                   l2257 15D4  
                                 l2249 1598                                   l2329 16CA  
                                 l2361 1498                                   l2345 1452  
                                 l2337 1446                                   l2193 1534  
                                 l2265 14AC                                   l2281 1170  
                                 l2441 165E                                   l2179 1386  
                                 l2259 1600                                   l2347 1462  
                                 l2363 14A8                                   l2339 144E  
                                 l2195 153C                                   l2267 14BE  
                                 l2291 11AC                                   l2283 1194  
                                 l2275 1156                                   l2371 13CA  
                                 l2443 166A                                   l2357 1478  
                                 l2349 1464                                   l2189 1522  
                                 l2269 14C6                                   l2293 11B0  
                                 l2277 1156                                   l2373 13D6  
                                 l2381 1430                                   l2445 1676  
                                 l2437 1652                                   l2359 1496  
                                 l2295 11CC                                   l2279 1168  
                                 l2375 1410                                   l2367 13B4  
                                 l2447 1682                                   l2439 1652  
                                 l2535 1740                                   l2297 11DC  
                                 l2289 119C                                   l2377 1412  
                                 l2369 13B8                                   l2299 11EC  
                                 l2379 1424                                   l2913 1734  
                                 l2923 139A                                   l2925 113C  
                                 STR_1 100D                                   u1200 1594  
                                 u1201 1590                                   u1210 1616  
                                 u1211 1612                                   u1220 1028  
                                 u1140 129E                                   u1300 14BE  
                                 u1221 1024                                   u1141 129A  
                                 u1301 14BA                                   u1230 104A  
                                 u1150 12C0                                   u1310 1168  
                                 u1231 1046                                   u1151 12BC  
                                 u1311 1164                                   u1320 11CC  
                                 u1321 11C8                                   u1330 16A2  
                                 u1331 169E                                   u1260 1128  
                                 u1244 1072                                   u1164 12E8  
                                 u1340 1446                                   u1180 1534  
                                 u1261 1122                                   u1245 106E  
                                 u1165 12E4                                   u1341 1442  
                                 u1181 1530                                   _LATA 0F89  
                                 u1270 112A                                   u1254 10D4  
                                 u1174 134A                                   u1350 1474  
                                 _LATB 0F8A                                   u1255 10D0  
                                 u1175 1346                                   u1351 1470  
                                 _LATC 0F8B                                   u1280 15AA  
                                 u1360 14A8                                   _LATD 0F8C  
                                 u1281 15A6                                   u1361 14A4  
                                 _LATE 0F8D                                   u1290 15CC  
                                 u1194 1562                                   u1370 13CA  
                                 u1291 15C8                                   u1195 155E  
                                 u1371 13C6                                   u1385 1422  
                                 u1387 1424                                   u1937 11D2  
                                 u1947 11F2                                   u1957 120E  
                                 _main 1734                                   fsr2h 0FDA  
                                 indf2 0FDF                                   fsr1l 0FE1  
                                 fsr2l 0FD9                 __end_of_led_initialize 1434  
                                 prodl 0FF3                                   start 0000  
                         ___param_bank 0000                  _lcd_4bit_send_command 14AC  
               dc_motor_initialize@ret 0040                   _gpio_pin_write_logic 1288  
                                ?_main 0030               ??_application_initialize 004C  
                  relay_turn_off@F3056 0052                 keypad_initialize@i_479 0044  
                                _PORTA 0F80                                  _PORTB 0F81  
                                _PORTC 0F82                                  _PORTD 0F83  
                                _PORTE 0F84                                  _TRISA 0F92  
                                _TRISB 0F93                                  _TRISC 0F94  
                                _TRISD 0F95                                  _TRISE 0F96  
                ?_lcd_4bit_send_enable 003A                                  _lcd_1 0026  
                                _led_1 002F                                  _led_2 002E  
                                tablat 0FF5                lcd_4bit_send_enable@ret 003C  
                                status 0FD8                        ?_led_initialize 003E  
       ?_gpio_pin_direction_initialize 0030                        ??_lcd_send_4bit 003D  
                      __initialization 16CE                           __end_of_main 1740  
                ?_gpio_pin_write_logic 0030                          _lat_registers 0001  
          __end_of_dc_motor_initialize 16CE                                 ??_main 004C  
                        __activetblptr 0002                       led_turn_on@F3055 004F  
               ?_lcd_4bit_send_command 0042                keypad_initialize@keypad 003E  
                               clear_0 16F4                  led_initialize@pin_obj 0042  
                               isa$std 0001                       lcd_send_4bit@ret 003F  
                         __pdataCOMRAM 0001                 ??_lcd_4bit_send_enable 003C  
                         __mediumconst 0000                                 tblptrh 0FF7  
                               tblptrl 0FF6                                 tblptru 0FF8  
                           __accesstop 0080                __end_of__initialization 16FA  
                        ___rparam_used 0001                      led_initialize@led 003E  
                    led_initialize@ret 0041                 ??_gpio_pin_write_logic 0033  
                       __pcstackCOMRAM 0030               lcd_4bit_send_command@ret 0045  
                       lcd_send_4bit@i 0040                 _application_initialize 1740  
                    led_turn_off@F3060 004E                        led_toggle@F3065 004D  
                     ??_led_initialize 0040                             _btn_values 1001  
                       _tris_registers 0015                                __Hparam 0000  
                              __Lparam 0000                    _gpio_pin_initialize 1598  
                         __psmallconst 1000                                __pcinit 16CE  
                              __ramtop 1000                                __ptext0 1734  
                              __ptext1 1740                                __ptext2 1652  
                              __ptext3 13B4                                __ptext4 1156  
                              __ptext5 14AC                                __ptext6 1522  
                              __ptext7 1604                                __ptext8 1434  
                              __ptext9 1690        ??_gpio_pin_direction_initialize 0032  
                              _motor_1 002C                   ?_gpio_pin_initialize 003A  
          lcd_4bit_send_enable@lcd_obj 003A                   end_of_initialization 16FA  
                        __Lmediumconst 0000                ??_lcd_4bit_send_command 0045  
                __end_of_lcd_send_4bit 1598                                postdec1 0FE5  
                              postdec2 0FDD                                postinc0 0FEE  
                              postinc2 0FDE                    _lcd_4bit_initialize 1156  
                 lcd_send_4bit@lcd_obj 003A                         _ecu_initialize 1652  
                 lcd_4bit_initialize@i 0049                  ??_gpio_pin_initialize 003C  
                 ?_lcd_4bit_initialize 0046                     relay_turn_on@F3051 0053  
                    relay_toggle@F3061 0051                 __end_of_ecu_initialize 1690  
                        __pidataCOMRAM 1704                    start_initialization 16CE  
__end_of_gpio_pin_direction_initialize 1156          _gpio_pin_direction_initialize 1012  
              ?_application_initialize 0030                  ??_lcd_4bit_initialize 0048  
                      ?_ecu_initialize 0030           lcd_4bit_send_command@lcd_obj 0042  
         lcd_4bit_send_command@command 0044                            __pbssCOMRAM 004C  
       __end_of_application_initialize 1746                            __smallconst 1000  
           lcd_4bit_initialize@lcd_obj 0046          __end_of_lcd_4bit_send_command 1522  
                  _dc_motor_initialize 1690       gpio_pin_direction_initialize@pin 0030  
     gpio_pin_direction_initialize@ret 0038                     keypad_initialize@i 0043  
               gpio_pin_initialize@pin 003A                 gpio_pin_initialize@ret 003D  
                 ?_dc_motor_initialize 003E                gpio_pin_write_logic@log 0032  
              gpio_pin_write_logic@pin 0030                gpio_pin_write_logic@ret 0039  
                            copy_data0 16E2                      _keypad_initialize 1434  
                   ?_keypad_initialize 003E                               __Hrparam 0000  
                             __Lrparam 0000                    ??_keypad_initialize 0040  
          __end_of_gpio_pin_initialize 1604                     __end_of_btn_values 100D  
                ??_dc_motor_initialize 0040              __end_of_keypad_initialize 14AC  
                             __ptext10 1598                               __ptext11 1288  
                             __ptext12 1012           __end_of_lcd_4bit_send_enable 1652  
            lcd_send_4bit@data_command 003C                       ??_ecu_initialize 004C  
                             isa$xinst 0000            dc_motor_initialize@dc_motor 003E  
          __end_of_lcd_4bit_initialize 1288           __end_of_gpio_pin_write_logic 13B4  
                        _lcd_send_4bit 1522                         _port_registers 000B  
                       _led_initialize 13B4                 lcd_4bit_initialize@ret 004B  
